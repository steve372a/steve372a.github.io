<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>小米HyperOS Bootloader解锁技术能力认证考试试卷</title>
    <url>/20250517/122526/</url>
    <content><![CDATA[<p><font color=red> <strong>【绝密★启用前】</strong> </font></p>
<h1 id="小米hyperos-bootloader解锁技术能力认证考试"><a class="markdownIt-Anchor" href="#小米hyperos-bootloader解锁技术能力认证考试"></a> 小米HyperOS Bootloader解锁技术能力认证考试</h1>
<p>（2026年度）</p>
<p><strong>试卷代码：BL-2026-B</strong></p>
<p><strong>考试日期：</strong> 2026年6月30日 上午<br />
<strong>考试时间：</strong> 2小时 （09:00 - 11:00）<br />
<strong>满分：</strong> 150 分</p>
<hr />
<p><strong>考生信息填写区域</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>考生姓名</strong></th>
<th style="text-align:left">____________________</th>
<th style="text-align:left"><strong>准考证号</strong></th>
<th style="text-align:left">____________________</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>身份证号后四位</strong></td>
<td style="text-align:left">________</td>
<td style="text-align:left"><strong>座位号</strong></td>
<td style="text-align:left">________</td>
</tr>
<tr>
<td style="text-align:left"><strong>考试地点（填写）</strong></td>
<td style="text-align:left">____________________</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<hr />
<p><strong>小米HyperOS Bootloader解锁技术能力认证考试试卷</strong></p>
<p><strong>考生须知：</strong></p>
<ol>
<li>本试卷分为两部分，第一部分为客观题，第二部分为主观题。共计五大题，满分150分，考试时间120分钟。</li>
<li>答题前，请务必核实准考证号、姓名等信息，并在指定位置填写。</li>
<li>所有答案必须写在试卷指定区域内（即题目下方的空白处）。请使用黑色字迹签字笔或钢笔作答。</li>
<li>请保持卷面整洁，字迹清晰。</li>
<li><strong>严禁携带任何电子设备（包括手机、智能手表、平板电脑、电子词典、计算器等）进入考场。</strong></li>
<li><strong>考场已启用高强度信号屏蔽，严禁任何形式的无线通讯或电子设备使用。</strong></li>
<li><strong>本次考试考务管理严格按照中华人民共和国普通高等学校招生全国统一考试（高考）标准执行安全检查和考场纪律。考生必须遵守考场规则，服从监考人员管理。任何违规行为将导致考试成绩无效。</strong></li>
<li><strong>本次考试的指定地点为：</strong>
<ul>
<li><strong>北京市海淀区北京一零一中学指定考场</strong></li>
<li><strong>北京市海淀区西二旗中路33号小米总部1F指定考场</strong><br />
请根据您的准考证信息，准确填写您的考试地点。</li>
</ul>
</li>
<li>考试开始信号发出后方可开始答题。考试结束信号发出后，请立即停止答题，并将试卷和草稿纸放在桌面，等待监考员收取。严禁将试卷或草稿纸带出考场。</li>
</ol>
<hr />
<p><strong>第一部分：客观题 (共 60 分)</strong></p>
<p><strong>一、选择题 (共 40 分，每小题 2 分)</strong></p>
<p>请在每小题所给出的四个选项中，选出一个最符合题目要求的选项。</p>
<ol>
<li>
<p>在操作系统虚拟化技术中，以下哪一项通常不依赖于硬件辅助（如VT-x/AMD-V）？<br />
A. KVM<br />
B. WHPX<br />
C. VirtualBox (Type-2 Hypervisor)<br />
D. LXC</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在现代x86-64汇编语言中，函数调用的第一个整型或指针参数通常通过哪个寄存器传递（遵循System V AMD64 ABI）？<br />
A. <code>rax</code><br />
B. <code>rdi</code><br />
C. <code>rsi</code><br />
D. <code>rdx</code></p>
<p>答案：[ ]</p>
</li>
<li>
<p>UEFI固件在启动过程中，负责发现并加载操作系统引导程序的阶段是：<br />
A. SEC (Security)<br />
B. PEI (Pre-EFI Initialization)<br />
C. DXE (Driver Execution Environment)<br />
D. BDS (Boot Device Selection)</p>
<p>答案：[ ]</p>
</li>
<li>
<p>如果需要在不完全模拟硬件的情况下，仅模拟一个进程在不同CPU架构上运行的环境，QEMU的哪种模式更为适用？<br />
A. qemu-system<br />
B. qemu-user<br />
C. qemu-img<br />
D. qemu-nbd</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在C++中，以下哪种情况最可能导致未定义行为（Undefined Behavior）？<br />
A. 使用<code>new</code>分配内存后忘记使用<code>delete</code>释放<br />
B. 对一个空指针进行解引用<br />
C. 在一个函数内部定义静态变量<br />
D. 使用<code>const</code>关键字修饰变量</p>
<p>答案：[ ]</p>
</li>
<li>
<p>Visual Basic的主要设计目标之一是：<br />
A. 开发高性能的操作系统内核<br />
B. 进行复杂的数学计算和科学建模<br />
C. 快速开发带有图形用户界面的应用程序<br />
D. 进行嵌入式系统编程</p>
<p>答案：[ ]</p>
</li>
<li>
<p>iboot引导固件在加载操作系统引导程序（如iOS的kernelcache）之前，通常会执行以下哪些任务？<br />
A. 进行基本的硬件自检和初始化<br />
B. 验证引导链的安全性（如签名检查）<br />
C. 设置内存映射和设备树<br />
D. 以上都是</p>
<p>答案：[ ]</p>
</li>
<li>
<p>Bochs作为一款CPU和系统模拟器，其核心优势在于：<br />
A. 极高的执行速度<br />
B. 对硬件指令和时序的高度精确仿真<br />
C. 支持热插拔设备<br />
D. 内建图形界面设计工具</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在二进制算术运算中，“溢出”（Overflow）通常指的是什么情况？<br />
A. 结果为零<br />
B. 结果超出了数据类型所能表示的最大范围<br />
C. 进行了除以零的操作<br />
D. 两个负数相加得到正数</p>
<p>答案：[ ]</p>
</li>
<li>
<p>HAXM是一种用于加速Android模拟器性能的技术，它主要依赖于哪家公司的CPU虚拟化扩展？<br />
A. AMD (AMD-V)<br />
B. ARM (TrustZone)<br />
C. Intel (VT-x)<br />
D. Qualcomm</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在Java语言中，哪个修饰符用于定义类变量（所有该类的实例共享同一个变量）？<br />
A. <code>final</code><br />
B. <code>abstract</code><br />
C. <code>static</code><br />
D. <code>volatile</code></p>
<p>答案：[ ]</p>
</li>
<li>
<p>C#中的“委托”（Delegate）概念与以下哪种编程语言特性相似？<br />
A. C/C++的函数指针<br />
B. Java的接口<br />
C. Python的列表推导式<br />
D. 汇编语言的宏</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在Linux图形系统（如基于X11）中，哪个组件通常负责管理窗口的位置、大小和堆叠顺序？<br />
A. X Server<br />
B. X Client<br />
C. Window Manager<br />
D. Display Manager</p>
<p>答案：[ ]</p>
</li>
<li>
<p>WHPX是Windows操作系统提供的虚拟化API，它允许第三方虚拟化产品（如某些模拟器或虚拟机）利用Windows的哪些功能？<br />
A. 文件系统压缩<br />
B. 网络共享<br />
C. 硬件辅助虚拟化<br />
D. 用户账户管理</p>
<p>答案：[ ]</p>
</li>
<li>
<p>以下哪项不是C语言标准库中常用的动态内存管理函数？<br />
A. <code>malloc</code><br />
B. <code>calloc</code><br />
C. <code>realloc</code><br />
D. <code>new</code></p>
<p>答案：[ ]</p>
</li>
<li>
<p>在汇编语言中，比较两个数值后，通常需要检查哪个寄存器的标志位来判断比较结果（如是否相等、大于、小于）？<br />
A. 栈指针寄存器<br />
B. 指令指针寄存器<br />
C. 状态/标志寄存器<br />
D. 通用数据寄存器</p>
<p>答案：[ ]</p>
</li>
<li>
<p>UEFI启动固件与传统BIOS相比，在可编程性方面有哪些显著优势？<br />
A. 仅支持汇编语言编程<br />
B. 支持C语言等高级语言进行开发<br />
C. 无法进行扩展或定制<br />
D. 只能通过跳线帽进行配置</p>
<p>答案：[ ]</p>
</li>
<li>
<p>VirtualBox在宿主操作系统之上运行，并管理虚拟机。它通常被归类为哪种类型的Hypervisor？<br />
A. Type-1 (裸金属型)<br />
B. Type-2 (寄居型)<br />
C. 混合型<br />
D. 容器型</p>
<p>答案：[ ]</p>
</li>
<li>
<p>在Java语言中，用于实现接口的关键字是：<br />
A. <code>extends</code><br />
B. <code>implements</code><br />
C. <code>interface</code><br />
D. <code>abstract</code></p>
<p>答案：[ ]</p>
</li>
<li>
<p>如果一段程序只包含0和1的序列，它属于哪种形式？<br />
A. 源代码<br />
B. 汇编代码<br />
C. 字节码<br />
D. 二进制代码</p>
<p>答案：[ ]</p>
</li>
</ol>
<hr />
<p><strong>第二部分：主观题 (共 90 分)</strong></p>
<p><strong>三、填空题 (共 20 分，每小题 4 分)</strong></p>
<p>请将正确答案填写在横线上。</p>
<ol>
<li>
<p>UEFI全称为统一可扩展__________接口。<br />
答案：_________________________</p>
</li>
<li>
<p><strong><strong><strong><strong><strong>是一种基于Linux内核的操作系统级虚拟化技术，它共享宿主机的内核。<br />
答案：</strong></strong></strong></strong></strong>_______________</p>
</li>
<li>
<p>要深入理解底层软件与硬件的交互细节，掌握__________语言是必不可少的。<br />
答案：_________________________</p>
</li>
<li>
<p>QEMU的qemu-system模式常用于配合如KVM、HAXM或WHPX等__________技术，实现加速仿真。<br />
答案：_________________________</p>
</li>
<li>
<p>Bochs模拟器因其对硬件行为的__________仿真而被广泛用于操作系统和驱动程序的开发调试。<br />
答案：_________________________</p>
</li>
</ol>
<hr />
<p><strong>四、简答题 (共 30 分，每小题 10 分)</strong></p>
<p>请简洁明了地回答以下问题。</p>
<ol>
<li>
<p>Bootloader解锁为何被视为一个高风险操作？请至少列举三个潜在的安全或稳定性风险。<br />
答案：</p>
<hr />
<hr />
<hr />
<hr />
<hr />
</li>
<li>
<p>简述iboot和UEFI在各自的应用场景（如手机和PC）中，作为第一阶段启动固件的主要任务。<br />
答案：</p>
<hr />
<hr />
<hr />
<hr />
<hr />
</li>
<li>
<p>请解释X11的“客户端”（Client）和“服务器”（Server）概念与我们通常理解的客户端/服务器模型有何不同，以及它们各自负责的功能。<br />
答案：</p>
<hr />
<hr />
<hr />
<hr />
<hr />
</li>
</ol>
<hr />
<p><strong>五、综合分析与论述题 (共 40 分)</strong></p>
<p>请就以下问题进行分析和论述。</p>
<ol>
<li>
<p><strong>代码分析：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">greet</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Hello from Base&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printType</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Type is Base&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">Base</span>() &#123;&#125; <span class="comment">// Virtual destructor</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">greet</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123; <span class="comment">// Override virtual function</span></span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Hello from Derived&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printType</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="comment">// Hides Base&#x27;s printType</span></span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Type is Derived&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">Derived</span>() <span class="keyword">override</span> &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Base* basePtr = <span class="keyword">new</span> <span class="built_in">Derived</span>();</span><br><span class="line"></span><br><span class="line">    basePtr-&gt;<span class="built_in">greet</span>();</span><br><span class="line">    basePtr-&gt;<span class="built_in">printType</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> basePtr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>问题：<br />
(1) 代码中的<code>virtual</code>关键字在<code>Base::greet()</code>和<code>Base::~Base()</code>中分别起什么作用？<br />
(2) <code>basePtr-&gt;greet();</code> 的输出是什么？为什么？<br />
(3) <code>basePtr-&gt;printType();</code> 的输出是什么？为什么？<br />
(4) 如果<code>Base</code>类的析构函数不是<code>virtual</code>，执行<code>delete basePtr;</code> 会有什么潜在问题？</p>
<p>答案：<br />
(1) _____________________________________________________________________________________</p>
<hr />
<hr />
<p>(2) _____________________________________________________________________________________</p>
<hr />
<hr />
<p>(3) _____________________________________________________________________________________</p>
<hr />
<hr />
<p>(4) _____________________________________________________________________________________</p>
<hr />
<hr />
<hr />
</li>
<li>
<p>请详细论述模拟器（如QEMU的qemu-system模式）与硬件辅助虚拟化技术（如KVM）在实现虚拟机方面的核心原理差异。结合您对设备Bootloader解锁后进行底层开发的理解，分析为何掌握这些虚拟化技术对于相关开发者是重要的。</p>
<p>答案：</p>
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
<hr />
</li>
</ol>
<hr />
<p><strong>（试卷完）</strong></p>
<hr />
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>Apple A7 设备降级到 10.3.3 系统</title>
    <url>/20220815/013515/</url>
    <content><![CDATA[<h2 id="准备开始"><a class="markdownIt-Anchor" href="#准备开始"></a> 准备开始</h2>
<h3 id="设备"><a class="markdownIt-Anchor" href="#设备"></a> 设备</h3>
<p>这里我列出了 A7 设备的降级情况，你们可以参考一下。</p>
<table>
<thead>
<tr>
<th>设备</th>
<th>是否可以降级</th>
<th>发布年期</th>
</tr>
</thead>
<tbody>
<tr>
<td>iPhone 5s</td>
<td>可以</td>
<td>2013年</td>
</tr>
<tr>
<td>iPad mini 2</td>
<td>可以(iPad4,6不能降级)</td>
<td>2013年</td>
</tr>
<tr>
<td>iPad Air</td>
<td>可以</td>
<td>2013年</td>
</tr>
<tr>
<td>iPad mini 3</td>
<td>不能降级</td>
<td>2014年</td>
</tr>
</tbody>
</table>
<p>部分机器是不能降级的，一定要看清楚！<br />
依赖</p>
<p>1.macOS系统，不要用虚拟机，黑苹果白苹果皆可。推荐白苹果。<br />
<font color=red>Windows 和 Linux 也可以降级，比较麻烦。不能使用此教程。这里我贴上项目地址，你们可以去看看：</font><a href="https://github.com/LukeZGD/iOS-OTA-Downgrader">Github 项目跳转</a><br />
2.当然是你的固件啦！</p>
<h2 id="开始咯~"><a class="markdownIt-Anchor" href="#开始咯~"></a> 开始咯～</h2>
<p>首先我们需要安装 Homebrew。这里我推荐使用国内网路地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>等待片刻，然后输入下面的命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install libusb</span><br></pre></td></tr></table></figure>
<p>然后我们下载 LeetDown 降级工具。鉴于国内复杂的网络环境，我专门准备了下载地址供你们下载，版本1.0.5：点我下载<br />
安装完成后，可能会提示“意外退出”的提示，不用担心。<br />
<img src="https://img.gejiba.com/images/9ea7514ba09b7128226ba5231a40ba9d.png" alt="" /><br />
可以直接使用以下方法修复。输入命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo codesign --force --deep --sign - /Applications/LeetDown.app</span><br></pre></td></tr></table></figure>
<p><img src="https://img.gejiba.com/images/c5e9175306a6226e49fad54cbf722bda.png" alt="" /><br />
上方的 xcode 开头的命令在安装 Homebrew 的时候就要求你运行了，无需再次运行。”<br />
运行完成此命令后，重新启动 LeetDown 软件。<br />
<img src="https://img.gejiba.com/images/c74987f4b630b46df57fac969aca8ef3.png" alt="" /><br />
点击第一个按钮，选择你设备的固件。如果你还没下载固件，推荐你在爱思助手网站下载：<a href="https://www.i4.cn/firmware.html">点击进入下载页面</a><br />
<font color=red>稍等一会，然后将你的设备进入 DFU 模式。进入方法是：先是长按电源键+HOME键 15 秒，然后松开电源键(但切记一定不要松开 HOME 键)再按十秒即可。</font><br />
然后点击第二个按钮即可。<br />
点击后会让我们选择使用 ipwndfu 还是 pwnedDFU，我们这里选择 pwnedDFU。<br />
<img src="https://img.gejiba.com/images/5194621142f936b4ff57a28328d69211.png" alt="" /><br />
如果一切顺利的话，等待一会后设备会红屏然后绿屏然后出现 Apple Logo。<br />
<img src="https://img.gejiba.com/images/75fa330ca2a8541f26187dc603b894be.jpg" alt="" /><br />
然后一台崭新的 iOS 10.3.3 系统就安装完成啦～<br />
<img src="https://img.gejiba.com/images/f0df81048ef6666b6c4a3ced0e7302e4.jpg" alt="" /><br />
希望此教程能对你有帮助！感谢你看到这里！</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>PlayCover 适用的《原神》iPA 文件</title>
    <url>/20230816/114759/</url>
    <content><![CDATA[<h1 id="原神"><a class="markdownIt-Anchor" href="#原神"></a> 《原神》</h1>
<h2 id="版本400-天空岛"><a class="markdownIt-Anchor" href="#版本400-天空岛"></a> 版本：4.0.0 (天空岛)</h2>
<p>您可以单击下面地址下载：<br />
<a href="https://pan.huang1111.cn/s/vlYgSE?path=%2F">下载原神 iPA 到设备</a></p>
<h1 id="更新方法"><a class="markdownIt-Anchor" href="#更新方法"></a> 更新方法</h1>
<p><strong>设备要求：Apple Silicon 的 Mac 电脑</strong></p>
<p>如果您不知道您的 Mac 电脑能否安装，请您点击“”图标，找到“关于本机”。<br />
如果显示的是“<em>芯片：Apple M1</em>”等，就说明您的电脑基于 Apple Silicon，<br />
如果显示的是“<em>处理器：2.3 GHz 八核 Intel Core i9</em>“等，就说明您的电脑基于 Intel，不能安装 PlayCover 和原神。<br />
<img src="https://img.gejiba.com/images/48597f6116725b33eb76bd09ca846ec7.png" alt="" /><br />
请您下载好 PlayCover 软件至您的 Mac：<br />
<a href="https://github.com/PlayCover/PlayCover/releases">下载 PlayCover</a><br />
<img src="https://img.gejiba.com/images/19a67305b6f5527d59230696115bbe7c.png" alt="" /><br />
然后将您下载的《原神》包体，移动至 PlayCover，等待安装就可以了。<br />
<img src="https://img.gejiba.com/images/64a6c685500968133486ccae710afe41.png" alt="" /><br />
进度条消失后，启动原神即可。<br />
<img src="https://img.gejiba.com/images/0f8e0e0f09980925c1f85a94d9110685.png" alt="" /><br />
<img src="https://img.gejiba.com/images/1fef0f6d03000f75c9c2d730a0ab0bba.png" alt="" /></p>
<h1 id="操作方式"><a class="markdownIt-Anchor" href="#操作方式"></a> 操作方式</h1>
<h2 id="键盘映射"><a class="markdownIt-Anchor" href="#键盘映射"></a> 键盘映射</h2>
<h3 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h3>
<p><a href="https://github.com/PlayCover/keymaps/tree/master/keymapping/com.miHoYo.GenshinImpact">下载键盘映射</a><br />
如果您不能访问 Github，点击以下链接下载:<br />
<a href="/download/Genshin_Impact_fixed_16by9.playmap">Genshin_Impact_fixed_16by9.playmap</a><br />
<a href="/download/Genshin_Impact_fixed_16by10.playmap">Genshin_Impact_fixed_16by10.playmap</a><br />
一般 Mac 的屏幕分辨率比例是 16 : 10。</p>
<h3 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> 导入</h3>
<p>下载完成后，打开 PlayCover，在“原神”图标点击右键，找到“导入键盘映射布局”<br />
<img src="https://img.gejiba.com/images/efc6855c13376b0b0a0379b07be383e4.png" alt="" /><br />
然后找到您的键盘映射布局就可以了。<br />
<img src="https://img.gejiba.com/images/6a44f60b24115af46d5be02b446a68bf.png" alt="" /></p>
<h3 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h3>
<p>随后打开原神，您可以按下 Option⌥ 键，让“原神”捕获鼠标，再次按下 Option⌥ 键，可以释放鼠标。<br />
您可以点击状态栏的“按键映射”-“打开/关闭按键映射编辑模式”，编辑您的键盘映射。<br />
<img src="https://img.gejiba.com/images/0caf11441df218503b6006a32166dd67.png" alt="" /></p>
<h2 id="手柄连接"><a class="markdownIt-Anchor" href="#手柄连接"></a> 手柄连接</h2>
<p>请您先连接手柄至 Mac。<br />
<img src="https://img.gejiba.com/images/cee062dae17e16cd0b9a97d6ad4651ae.png" alt="" /><br />
然后打开原神，打开“设置”<br />
<img src="https://img.gejiba.com/images/91a9e660af575671d4739c2587cc88d4.png" alt="" /><br />
将“触屏”改为“手柄”<br />
<img src="https://img.gejiba.com/images/fded33a413746b6e4a4463a0726c2afc.png" alt="" /><br />
然后就完成啦！<br />
<img src="https://img.gejiba.com/images/7f47f18a1f5d592143ab1540f8d466d2.png" alt="" /></p>
<h1 id="推荐观看"><a class="markdownIt-Anchor" href="#推荐观看"></a> 推荐观看</h1>
<p>本文章没有列出一些会存在的普遍问题，推荐观看下面的视频：</p>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?bvid=BV1Xx4y1F7um&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe>
</div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>QEMU 基础命令学习</title>
    <url>/20220826/022653/</url>
    <content><![CDATA[<center>
<div style="width:100px; height:100px; border-radius:100%; overflow:hidden;">
    <img src="https://steve372yeyeye.github.io/images/avatar.gif" alt>
</div>
<br>
<font size="6"><center>？、アイドル宣言</center></font>
<font size="3"><center>的博客小站</center></font>
<br>
<p><a href="/">返回到首页</a></p>
<br>
<font color=#66ccff>作者：？、アイドル宣言</font>
</center>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<font face="宋体">
<p>本文章是为了让各位更好的学习 QEMU 命令。<br />
<font color=red>这里只学习 qemu-system，没有 qemu-user 的内容。</font></p>
<h2 id="qemu-是什么"><a class="markdownIt-Anchor" href="#qemu-是什么"></a> QEMU 是什么</h2>
<p>QEMU是一套由<font color=green>法布里斯·贝拉(Fabrice Bellard)</font>所编写的以GPL许可证分发源码的模拟处理器软件，在<font color=green>GNU/Linux</font>平台上使用广泛。<font color=green>Bochs，PearPC</font>等与其类似，但不具备其许多特性，比如高速度及跨平台的特性，通过KVM，QEMU能虚拟化至真实电脑的速度。</p>
<h2 id="qemu-有什么用"><a class="markdownIt-Anchor" href="#qemu-有什么用"></a> QEMU 有什么用？</h2>
<p>简单来说就是能跨平台高速模拟各种系统。不恰当的比喻：就是能在手机上运行 Windows 系统，而且速度很快。</p>
<h1 id="开始学习"><a class="markdownIt-Anchor" href="#开始学习"></a> 开始学习</h1>
<h2 id="安装-qemu"><a class="markdownIt-Anchor" href="#安装-qemu"></a> 安装 QEMU</h2>
<h3 id="编译安装"><a class="markdownIt-Anchor" href="#编译安装"></a> 编译安装</h3>
<blockquote>
<p>安装依赖</p>
</blockquote>
<p>QEMU 可以通过编译的方式安装。<br />
需要先根据你系统的情况，安装 QEMU 必需的依赖(一般是这些)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev libsdl1.2-dev libsnappy-dev liblzo2-dev zlib1g-dbg automake gcc python wget &amp;&amp; apt-get install build-essential</span><br></pre></td></tr></table></figure>
<p><a href="https://git-scm.com">Git</a> <a href="https://github.com/GNOME/glib">Glib</a> <a href="https://baike.baidu.com/item/FDT/1691090?fr=aladdin">fdt</a> <a href="http://www.pixman.org">pixman</a> <a href="http://www.zlib.net">zlib</a> <a href="http://www.libsdl.org">libsdl</a> <a href="https://github.com/google/snappy">snappy</a> <a href="https://launchpad.net/ubuntu/+source/lzo2/">lzo2</a> <a href="https://www.solvusoft.com/zh-cn/file-extensions/software/gnu-operating-system/automake/">automake</a> <a href="https://www.gnu.org/software/gcc/">gcc</a> <a href="https://www.python.org">python</a><br />
安装完成后，需要下载 QEMU 的源码包或者是克隆。</p>
<blockquote>
<p>克隆 QEMU</p>
</blockquote>
<p>请输入以下命令<font color=green>(北京外国语大学开源软件镜像站)</font>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://mirrors.bfsu.edu.cn/git/qemu.git</span><br></pre></td></tr></table></figure>
<p>然后你应该会在主目录看到一个叫“qemu”的文件夹，这就是最新的源码包。</p>
<blockquote>
<p>下载 QEMU 源码<font color=green>(tar.xz)</font>：</p>
</blockquote>
<p>在此网站下载源码包：<br />
<a href="https://download.qemu.org">https://download.qemu.org</a><br />
然后通过 tar 命令解压：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xvf ./qemu-7.1.0-rc3.tar.xz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>开始编译</p>
</blockquote>
<p>如果你前面的操作完成了的话，就可以开始编译了。<br />
首先我们要 cd 到目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/qemu-7.1.0-rc3</span><br></pre></td></tr></table></figure>
<p>然后开始配置编译内容，输入 ./configure 即可。但是这样的话没用的东西会很多，所以我们在 configure 里面加参数。参数可以查阅 <font color=green>./configure --help</font>。比如我们只需要编译一个架构而不是全局编译，那么我们输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --target-list=x86_64-softmmu</span><br></pre></td></tr></table></figure>
<p>其中，<font color=green>x86_64-softmmu</font> 是你要编译的架构。<br />
那我们想编译多个架构怎么办呢？<br />
只需要在架构后加上其他架构即可，用小写的逗号分隔。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --target-list=x86_64-softmmu,aarch64-softmmu,ppc-softmmu</span><br></pre></td></tr></table></figure>
<p>还有其他的编译选项。这里就不说了。<br />
等待配置完成后，就可以开始编译 qemu 了。<br />
输入 make 可以开始，也可以加参数。比如我要是想开 8 核编译那么输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure>
<p>具体几核看你设备的 CPU 核心数。不加参数只会开一核编译，速度很慢。</p>
<blockquote>
<p>编译后安装</p>
</blockquote>
<p>编译完成后，你直接运行 qemu 是没有反应的，提示命令不存在。我们需要再安装一下 qemu 才能使用。<br />
输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>就安装完成了。</p>
<h3 id="brew-安装-qemu"><a class="markdownIt-Anchor" href="#brew-安装-qemu"></a> brew 安装 QEMU</h3>
<p>Mac 电脑不需要必须通过编译安装，也可以通过软件包管理器安装 QEMU。<br />
首先给你的 Mac 电脑安装 <font color=green>HomeBrew</font>。这里推荐使用国内安装脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>跟着安装脚本走。安装完成 Homebrew 之后，输入以下命令安装 QEMU：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install qemu</span><br></pre></td></tr></table></figure>
<p>等待安装完成即可享用 QEMU。<br />
<img src="https://img.gejiba.com/images/2c362227e66bba6a2db161e2bc5c8052.png" alt="" /></p>
<h3 id="apt-安装-qemu"><a class="markdownIt-Anchor" href="#apt-安装-qemu"></a> APT 安装 QEMU</h3>
<p><font color=green>apt</font> 是 <font color=green>Debian GNU/Linux</font> 以及基于 Debian 的其他发行版中默认的软件包管理器。我们使用它安装 QEMU。同样也不用必须编译安装。<br />
输入以下命令，安装 qemu 的命令行。以 x86_64/i386 架构为例，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install qemu-system-x86</span><br></pre></td></tr></table></figure>
<p>等待安装完成即可。<br />
如果你的 Linux 系统有图形界面，那么可以直接安装 <font color=green>qemu 的图形前端</font>。输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install aqemu</span><br></pre></td></tr></table></figure>
<p>安装完成后，可以在程序菜单里看到 aqemu，直接运行即可。</p>
<h2 id="qemu-的使用"><a class="markdownIt-Anchor" href="#qemu-的使用"></a> QEMU 的使用</h2>
<h3 id="运行-qemu"><a class="markdownIt-Anchor" href="#运行-qemu"></a> 运行 QEMU</h3>
<p>我们按照上面的步骤安装完成 QEMU 之后，可以查看一下安装完 QEMU 的版本，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qemu-system-&lt;架构&gt; --version</span><br></pre></td></tr></table></figure>
<p><img src="https://img.gejiba.com/images/7085de537a84b3fd450482148b6b8d2c.png" alt="" /><br />
可以看到 QEMU 已经正确安装，我们现在就可以试试水，看看如何启动。</p>
<blockquote>
<p>熟悉命令</p>
</blockquote>
<p>QEMU 基本命令如下(x86_64)：</p>
<pre><code>-accel 加速类型，一般为(kvm,hax,hvf,tcg)
-machine 机器类型，一般为pc和q35。具体可查看help
-net nic,model=&lt;网卡名称&gt; 设置虚拟机网卡。
-net user 设置虚拟机网络模式，有user和tap可选。
-hda,-hdb,-hdc,-hdd 磁盘位，放入磁盘镜像。
-m 256 设置的内存(RAM)，单位是MB。1GB=1024MB
-vga vmware 设置的显示卡
-device 添加各种硬件设备。
-soundhw sb16 启用声音支持。
-cdrom 光盘位，放入 ISO 镜像。
-fda,-fdb 软盘位，放入磁盘镜像。
-cpu 设置虚拟的 CPU
-smp &lt;核心数&gt; 设置虚拟cpu核心数。默认单核
-vnc :&lt;端口号&gt; 开启后使用 VNC Viewer 连接。
-pflash &lt;固件&gt; 并行闪存镜像，一般用于 EFI 启动。
-nographic 无图形启动，一般用于 Linux。
-win2k-hack （i386）在安装 Windows 2000 时使用它以避免磁盘已满错误，但会降低磁盘性能，安装完成后可以删掉该命令。
-usb 启用 USB 控制器，其他 USB 设置需要使用 -device 命令。
-sdl 开启后使用 XSDL Server 连接。 
-k &lt;language&gt; 键盘的语言，一般是为了适配不同语种的键盘。一般不用填。
-boot c 引导顺序，c是硬盘、n是网络、d是光盘、s是软盘。
-name 虚拟机名称，如果你是 VNC 连接，该名称将显示到你 VNC 远程桌面信息。
</code></pre>
<p>这些命令组合起来可以运行虚拟机。</p>
<blockquote>
<p>一个实例</p>
</blockquote>
<p>下面是包含了上面的部分命令的<font color=green>一个实例</font>，不知道你能不能看懂。</p>
<font color=red>
qemu-system-x86_64 -hda /home/steve372/win10.qcow2 -cdrom /home/steve372/win10.iso -m 768 -machine q35 -accel kvm -smp 2 -vga std -soundhw ac97 -usb -device usb-tablet -boot d -pflash /home/steve372/QEMU_EFI.fd -net nic,model=rtl8139 -net user -vnc :0 -name "Windows 10"
</font>
<p>如果不能看懂，可以看下面的<font color=green>“命令详解“</font>。来更加了解这些命令。</p>
<h3 id="命令详解"><a class="markdownIt-Anchor" href="#命令详解"></a> 命令详解</h3>
<h4 id="-accel-命令"><a class="markdownIt-Anchor" href="#-accel-命令"></a> -accel 命令</h4>
<p>-accel 命令可以为<font color=green>虚拟机提供加速</font>，有以下加速类型：<strong>kvm,hax,hvf,tcg</strong>。当然，这些命令要运行起来都有一定的要求，如下：</p>
<pre><code>kvm 只能在 Linux 环境运行，并且需要内核支持（手机可以洗洗睡了）
hvf 只能在 macOS 环境运行。
hax 只能在 Windows 或 macOS 环境运行，似乎不太稳定。
tcg 通用。手机只能用 tcg 了
</code></pre>
<p>请根据你自己的系统进行搭配。<br />
这些加速类型之中，<strong>kvm是最快的，hvf和hax差不多，最后是tcg。</strong><br />
稳定性中，<strong>kvm、hvf、tcg都挺稳定的，hax一般。</strong></p>
<h4 id="-machine-命令"><a class="markdownIt-Anchor" href="#-machine-命令"></a> -machine 命令</h4>
<p>-machine 命令可以设置机器类型。有以下机器类型：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        机器类型列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">microvm              microvm (i386)</span><br><span class="line">pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-7.0)</span><br><span class="line">pc-i440fx-7.0        Standard PC (i440FX + PIIX, 1996) (default)</span><br><span class="line">pc-i440fx-6.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-6.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-6.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-3.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-3.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.9        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.8        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.7        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.6        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.5        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.4        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.3        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.12       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.11       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.10       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-7.0)</span><br><span class="line">pc-q35-7.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.0.1         Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.9           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.8           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.7           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.6           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.5           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.4           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.12          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.11          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.10          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">isapc                ISA-only PC</span><br><span class="line">none                 empty machine</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>一般来说，我们最常用的就是 pc 和 q35。如果你使用的是别人的镜像，<font color=#66ccff>那么务必跟随镜像主的安排。</font></p>
<h4 id="-net-命令"><a class="markdownIt-Anchor" href="#-net-命令"></a> -net 命令</h4>
<p>QEMU 的 -net 命令是提供跟网络相关的功能，这里只介绍最基本的两种方式。<br />
-net 的用法是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-net user -net nic,model=&lt;网卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>首先，前面的 -net 有五种选择：user, tap, bridge, vde, socket<br />
如果你没有特殊需求，<font color=green>直接使用 User 网络即可。</font><br />
然后，后面的 -net 是选择虚拟的网卡。QEMU 这里有以下网卡可选：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        虚拟网卡类型列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><figcaption><span>NIC list</span></figcaption><table><tr><td class="code"><pre><span class="line">e1000</span><br><span class="line">e1000-82544gc</span><br><span class="line">e1000-82545em</span><br><span class="line">e1000e</span><br><span class="line">i82550</span><br><span class="line">i82551</span><br><span class="line">i82557a</span><br><span class="line">i82557b</span><br><span class="line">i82557c</span><br><span class="line">i82558a</span><br><span class="line">i82558b</span><br><span class="line">i82559a</span><br><span class="line">i82559b</span><br><span class="line">i82559c</span><br><span class="line">i82559er</span><br><span class="line">i82562</span><br><span class="line">i82801</span><br><span class="line">ne2k_pci</span><br><span class="line">pcnet</span><br><span class="line">rtl8139</span><br><span class="line">tulip</span><br><span class="line">virtio-net-pci</span><br><span class="line">virtio-net-pci-non-transitional</span><br><span class="line">virtio-net-pci-transitional</span><br><span class="line">vmxnet3</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>我们常用的是 <strong>e1000,ne2k_pci,rtl8139,virtio</strong> 网卡。<br />
<font color=#66ccff>还是要看镜像主的安排。</font>比如你的镜像支持 rtl8139 网卡，那么输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-net user -net nic,model=rtl8139</span><br></pre></td></tr></table></figure>
<p>就可以了。</p>
<h4 id="-hda-命令"><a class="markdownIt-Anchor" href="#-hda-命令"></a> -hda 命令</h4>
<p>-hda,-hdb,-hdc,-hdd 是磁盘镜像位，需将下载到的镜像放到这里。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-hda &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>
<p>其中，文件支持所有可用的镜像文件。<br />
<font color=red>不推荐使用 -hdc 参数，可能会出问题。</font><br />
<font color=green>如果需要使用 virtio 磁盘，那么需要使用 -drive 命令。</font></p>
<h4 id="-m-命令"><a class="markdownIt-Anchor" href="#-m-命令"></a> -m 命令</h4>
<p>-m 命令是设置你虚拟机的内存用的。<font color=green>M 是 Memory(内存) 的首字母。</font>用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-m &lt;数字&gt;</span><br></pre></td></tr></table></figure>
<p>数字单位是 MB。1 GB=1024 MB、3 GB=3072 MB</p>
<h4 id="-vga-命令"><a class="markdownIt-Anchor" href="#-vga-命令"></a> -vga 命令</h4>
<p>-vga 命令可以<font color=green>模拟虚拟机的显卡</font>，用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-vga &lt;显卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>目前支持的显卡有：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">std                  standard VGA (default)</span><br><span class="line">cirrus               Cirrus VGA</span><br><span class="line">vmware               VMWare SVGA</span><br><span class="line">xenfb                Xen paravirtualized framebuffer</span><br><span class="line">virtio               Virtio VGA</span><br><span class="line">QXL</span><br></pre></td></tr></table></figure>
<p>如果你模拟的是 Windows 的话，那么可能需要<font color=red>根据你的 Windows 系统选择显卡。</font>如下：</p>
<pre><code>Windows 3.1     需要手动安装 cirrus 驱动。
Windows 95      cirrus
Windows 98      cirrus
Windows 2000    cirrus
Windows XP      std / VMware
Windows Vista   std / VMware
Windows 7       std / VMware
Windows 8       std / VMware
Windows 8.1     std / VMware
Windows 10      std / VMware
Windows 11      std / VMware
</code></pre>
<p>Linux 应该可以选择 <font color=green>virtio</font> 显卡。</p>
<h4 id="-device-命令"><a class="markdownIt-Anchor" href="#-device-命令"></a> -device 命令</h4>
<p>-device 命令是 QEMU 处理硬件的一个媒介，他也可以取代部分命令。比如<font color=green> -soundhw 和 -usbdevice</font>。如果需要将 VNC 和鼠标对齐的话，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-usb // 启用 USB 控制器</span><br><span class="line">-device usb-tablet // 添加虚拟的 USB 触控板 </span><br></pre></td></tr></table></figure>
<p>就可以了。更深层次的 USB 命令到后面会讲。</p>
<h4 id="-soundhw-命令"><a class="markdownIt-Anchor" href="#-soundhw-命令"></a> -soundhw 命令</h4>
<p>-soundhw 命令是启用声音支持，直白了说就是能让虚拟机出声音。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-soundhw &lt;声卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>我们只需要<font color=green>填入声卡名称</font>就可以了，声卡名如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ac97        Intel 82801AA AC97 Audio</span><br><span class="line">adlib       雅马哈 YM3812 (OPL2)</span><br><span class="line">cs4231a     CS4231A</span><br><span class="line">es1370      ENSONIQ AudioPCI ES1370</span><br><span class="line">gus         Gravis Ultrasound GF1</span><br><span class="line">hda         Intel HD Audio</span><br><span class="line">pcspk       PC speaker</span><br><span class="line">sb16        创新科技声霸卡 16</span><br></pre></td></tr></table></figure>
<p>我们常用的是 sb16 和 ac97 还有 hda。</p>
<h4 id="-cdrom-命令"><a class="markdownIt-Anchor" href="#-cdrom-命令"></a> -cdrom 命令</h4>
<p>该命令是光驱位，放入光盘镜像（*.ISO）用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-cdrom &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>
<p>直接将光盘文件路径写下即可。<br />
<font color=red>光盘是有code显示的，可以通过这个代码定位问题。</font><br />
<img src="https://img.gejiba.com/images/b4599dcccf66d9f30b7020f4932a617e.png" alt="" /><br />
<img src="https://img.gejiba.com/images/25ba59fbd94a92295fcb09e2981cc2bb.png" alt="" /></p>
<h4 id="-cpu-命令"><a class="markdownIt-Anchor" href="#-cpu-命令"></a> -cpu 命令</h4>
<p>模拟你要模拟的 CPU，可选 CPU 有：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        CPU 列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x86 486                   (alias configured by machine type)</span><br><span class="line">x86 486-v1                </span><br><span class="line">x86 Broadwell             (alias configured by machine type)</span><br><span class="line">x86 Broadwell-IBRS        (alias of Broadwell-v3)</span><br><span class="line">x86 Broadwell-noTSX       (alias of Broadwell-v2)</span><br><span class="line">x86 Broadwell-noTSX-IBRS  (alias of Broadwell-v4)</span><br><span class="line">x86 Broadwell-v1          Intel Core Processor (Broadwell)</span><br><span class="line">x86 Broadwell-v2          Intel Core Processor (Broadwell, no TSX)</span><br><span class="line">x86 Broadwell-v3          Intel Core Processor (Broadwell, IBRS)</span><br><span class="line">x86 Broadwell-v4          Intel Core Processor (Broadwell, no TSX, IBRS)</span><br><span class="line">x86 Cascadelake-Server    (alias configured by machine type)</span><br><span class="line">x86 Cascadelake-Server-noTSX  (alias of Cascadelake-Server-v3)</span><br><span class="line">x86 Cascadelake-Server-v1  Intel Xeon Processor (Cascadelake)</span><br><span class="line">x86 Cascadelake-Server-v2  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES]</span><br><span class="line">x86 Cascadelake-Server-v3  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, no TSX]</span><br><span class="line">x86 Cascadelake-Server-v4  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, no TSX]</span><br><span class="line">x86 Cascadelake-Server-v5  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, EPT switching, XSAVES, no TSX]</span><br><span class="line">x86 Conroe                (alias configured by machine type)</span><br><span class="line">x86 Conroe-v1             Intel Celeron_4x0 (Conroe/Merom Class Core 2)</span><br><span class="line">x86 Cooperlake            (alias configured by machine type)</span><br><span class="line">x86 Cooperlake-v1         Intel Xeon Processor (Cooperlake)</span><br><span class="line">x86 Cooperlake-v2         Intel Xeon Processor (Cooperlake) [XSAVES]</span><br><span class="line">x86 Denverton             (alias configured by machine type)</span><br><span class="line">x86 Denverton-v1          Intel Atom Processor (Denverton)</span><br><span class="line">x86 Denverton-v2          Intel Atom Processor (Denverton) [no MPX, no MONITOR]</span><br><span class="line">x86 Denverton-v3          Intel Atom Processor (Denverton) [XSAVES, no MPX, no MONITOR]</span><br><span class="line">x86 Dhyana                (alias configured by machine type)</span><br><span class="line">x86 Dhyana-v1             Hygon Dhyana Processor</span><br><span class="line">x86 Dhyana-v2             Hygon Dhyana Processor [XSAVES]</span><br><span class="line">x86 EPYC                  (alias configured by machine type)</span><br><span class="line">x86 EPYC-IBPB             (alias of EPYC-v2)</span><br><span class="line">x86 EPYC-Milan            (alias configured by machine type)</span><br><span class="line">x86 EPYC-Milan-v1         AMD EPYC-Milan Processor</span><br><span class="line">x86 EPYC-Rome             (alias configured by machine type)</span><br><span class="line">x86 EPYC-Rome-v1          AMD EPYC-Rome Processor</span><br><span class="line">x86 EPYC-Rome-v2          AMD EPYC-Rome Processor</span><br><span class="line">x86 EPYC-v1               AMD EPYC Processor</span><br><span class="line">x86 EPYC-v2               AMD EPYC Processor (with IBPB)</span><br><span class="line">x86 EPYC-v3               AMD EPYC Processor</span><br><span class="line">x86 Haswell               (alias configured by machine type)</span><br><span class="line">x86 Haswell-IBRS          (alias of Haswell-v3)</span><br><span class="line">x86 Haswell-noTSX         (alias of Haswell-v2)</span><br><span class="line">x86 Haswell-noTSX-IBRS    (alias of Haswell-v4)</span><br><span class="line">x86 Haswell-v1            Intel Core Processor (Haswell)</span><br><span class="line">x86 Haswell-v2            Intel Core Processor (Haswell, no TSX)</span><br><span class="line">x86 Haswell-v3            Intel Core Processor (Haswell, IBRS)</span><br><span class="line">x86 Haswell-v4            Intel Core Processor (Haswell, no TSX, IBRS)</span><br><span class="line">x86 Icelake-Client        (alias configured by machine type)</span><br><span class="line">x86 Icelake-Client-noTSX  (alias of Icelake-Client-v2)</span><br><span class="line">x86 Icelake-Client-v1     Intel Core Processor (Icelake) [deprecated]</span><br><span class="line">x86 Icelake-Client-v2     Intel Core Processor (Icelake) [no TSX, deprecated]</span><br><span class="line">x86 Icelake-Client-v3     Intel Core Processor (Icelake) [no TSX, XSAVES, deprecated]</span><br><span class="line">x86 Icelake-Server        (alias configured by machine type)</span><br><span class="line">x86 Icelake-Server-noTSX  (alias of Icelake-Server-v2)</span><br><span class="line">x86 Icelake-Server-v1     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v2     Intel Xeon Processor (Icelake) [no TSX]</span><br><span class="line">x86 Icelake-Server-v3     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v4     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v5     Intel Xeon Processor (Icelake) [XSAVES]</span><br><span class="line">x86 Icelake-Server-v6     Intel Xeon Processor (Icelake) [5-level EPT]</span><br><span class="line">x86 IvyBridge             (alias configured by machine type)</span><br><span class="line">x86 IvyBridge-IBRS        (alias of IvyBridge-v2)</span><br><span class="line">x86 IvyBridge-v1          Intel Xeon E3-12xx v2 (Ivy Bridge)</span><br><span class="line">x86 IvyBridge-v2          Intel Xeon E3-12xx v2 (Ivy Bridge, IBRS)</span><br><span class="line">x86 KnightsMill           (alias configured by machine type)</span><br><span class="line">x86 KnightsMill-v1        Intel Xeon Phi Processor (Knights Mill)</span><br><span class="line">x86 Nehalem               (alias configured by machine type)</span><br><span class="line">x86 Nehalem-IBRS          (alias of Nehalem-v2)</span><br><span class="line">x86 Nehalem-v1            Intel Core i7 9xx (Nehalem Class Core i7)</span><br><span class="line">x86 Nehalem-v2            Intel Core i7 9xx (Nehalem Core i7, IBRS update)</span><br><span class="line">x86 Opteron_G1            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G1-v1         AMD Opteron 240 (Gen 1 Class Opteron)</span><br><span class="line">x86 Opteron_G2            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G2-v1         AMD Opteron 22xx (Gen 2 Class Opteron)</span><br><span class="line">x86 Opteron_G3            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G3-v1         AMD Opteron 23xx (Gen 3 Class Opteron)</span><br><span class="line">x86 Opteron_G4            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G4-v1         AMD Opteron 62xx class CPU</span><br><span class="line">x86 Opteron_G5            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G5-v1         AMD Opteron 63xx class CPU</span><br><span class="line">x86 Penryn                (alias configured by machine type)</span><br><span class="line">x86 Penryn-v1             Intel Core 2 Duo P9xxx (Penryn Class Core 2)</span><br><span class="line">x86 SandyBridge           (alias configured by machine type)</span><br><span class="line">x86 SandyBridge-IBRS      (alias of SandyBridge-v2)</span><br><span class="line">x86 SandyBridge-v1        Intel Xeon E312xx (Sandy Bridge)</span><br><span class="line">x86 SandyBridge-v2        Intel Xeon E312xx (Sandy Bridge, IBRS update)</span><br><span class="line">x86 Skylake-Client        (alias configured by machine type)</span><br><span class="line">x86 Skylake-Client-IBRS   (alias of Skylake-Client-v2)</span><br><span class="line">x86 Skylake-Client-noTSX-IBRS  (alias of Skylake-Client-v3)</span><br><span class="line">x86 Skylake-Client-v1     Intel Core Processor (Skylake)</span><br><span class="line">x86 Skylake-Client-v2     Intel Core Processor (Skylake, IBRS)</span><br><span class="line">x86 Skylake-Client-v3     Intel Core Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Client-v4     Intel Core Processor (Skylake, IBRS, no TSX) [IBRS, XSAVES, no TSX]</span><br><span class="line">x86 Skylake-Server        (alias configured by machine type)</span><br><span class="line">x86 Skylake-Server-IBRS   (alias of Skylake-Server-v2)</span><br><span class="line">x86 Skylake-Server-noTSX-IBRS  (alias of Skylake-Server-v3)</span><br><span class="line">x86 Skylake-Server-v1     Intel Xeon Processor (Skylake)</span><br><span class="line">x86 Skylake-Server-v2     Intel Xeon Processor (Skylake, IBRS)</span><br><span class="line">x86 Skylake-Server-v3     Intel Xeon Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Server-v4     Intel Xeon Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Server-v5     Intel Xeon Processor (Skylake, IBRS, no TSX) [IBRS, XSAVES, EPT switching, no TSX]</span><br><span class="line">x86 Snowridge             (alias configured by machine type)</span><br><span class="line">x86 Snowridge-v1          Intel Atom Processor (SnowRidge)</span><br><span class="line">x86 Snowridge-v2          Intel Atom Processor (Snowridge, no MPX)</span><br><span class="line">x86 Snowridge-v3          Intel Atom Processor (Snowridge, no MPX) [XSAVES, no MPX]</span><br><span class="line">x86 Snowridge-v4          Intel Atom Processor (Snowridge, no MPX) [no split lock detect, no core-capability]</span><br><span class="line">x86 Westmere              (alias configured by machine type)</span><br><span class="line">x86 Westmere-IBRS         (alias of Westmere-v2)</span><br><span class="line">x86 Westmere-v1           Westmere E56xx/L56xx/X56xx (Nehalem-C)</span><br><span class="line">x86 Westmere-v2           Westmere E56xx/L56xx/X56xx (IBRS update)</span><br><span class="line">x86 athlon                (alias configured by machine type)</span><br><span class="line">x86 athlon-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 core2duo              (alias configured by machine type)</span><br><span class="line">x86 core2duo-v1           Intel(R) Core(TM)2 Duo CPU     T7700  @ 2.40GHz</span><br><span class="line">x86 coreduo               (alias configured by machine type)</span><br><span class="line">x86 coreduo-v1            Genuine Intel(R) CPU           T2600  @ 2.16GHz</span><br><span class="line">x86 kvm32                 (alias configured by machine type)</span><br><span class="line">x86 kvm32-v1              Common 32-bit KVM processor</span><br><span class="line">x86 kvm64                 (alias configured by machine type)</span><br><span class="line">x86 kvm64-v1              Common KVM processor</span><br><span class="line">x86 n270                  (alias configured by machine type)</span><br><span class="line">x86 n270-v1               Intel(R) Atom(TM) CPU N270   @ 1.60GHz</span><br><span class="line">x86 pentium               (alias configured by machine type)</span><br><span class="line">x86 pentium-v1            </span><br><span class="line">x86 pentium2              (alias configured by machine type)</span><br><span class="line">x86 pentium2-v1           </span><br><span class="line">x86 pentium3              (alias configured by machine type)</span><br><span class="line">x86 pentium3-v1           </span><br><span class="line">x86 phenom                (alias configured by machine type)</span><br><span class="line">x86 phenom-v1             AMD Phenom(tm) 9550 Quad-Core Processor</span><br><span class="line">x86 qemu32                (alias configured by machine type)</span><br><span class="line">x86 qemu32-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 qemu64                (alias configured by machine type)</span><br><span class="line">x86 qemu64-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 base                  base CPU model type with no features enabled</span><br><span class="line">x86 max                   Enables all features supported by the accelerator in the current host</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>具体根据自己需求选择。</p>
<h4 id="-smp-命令"><a class="markdownIt-Anchor" href="#-smp-命令"></a> -smp 命令</h4>
<p>该命令可以指定虚拟 CPU 的数量，核心数，线程数等。用法：<br />
<font color=red><br />
只指定 CPU 数量：<br />
</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-smp 2</span><br></pre></td></tr></table></figure>
<p>即代表 QEMU 会模拟两个 CPU 出来（不是核心）。<br />
当然，你也可以加参数，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-smp cores=2,threads=4,sockets=1</span><br></pre></td></tr></table></figure>
<p>这条命令的意思是：<font color=green>一个 CPU 插槽，双核四线程。</font></p>
<h4 id="-vnc-命令"><a class="markdownIt-Anchor" href="#-vnc-命令"></a> -vnc 命令</h4>
<p>这条命令可以让你的虚拟机通过 VNC Viewer 连接。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-vnc :&lt;端口号&gt;</span><br></pre></td></tr></table></figure>
<p>输入后直接使用 VNC Viewer 连接。如果 -vnc :0 那么在 VNC Viewer 的连接中就设置为 &lt;ip地址&gt;:0。如果你是手机开的模拟器，输入<font color=green> 127.0.0.1:0 </font></p>
<h4 id="-pflash-命令"><a class="markdownIt-Anchor" href="#-pflash-命令"></a> -pflash 命令</h4>
<p>一般用于 EFI 引导启动，用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-pflash &lt;EFI 固件&gt;</span><br></pre></td></tr></table></figure>
<p>需要你有 EFI 固件，一般是 fd 格式。</p>
<h3 id="其他-qemu-模拟器的操作"><a class="markdownIt-Anchor" href="#其他-qemu-模拟器的操作"></a> 其他 QEMU 模拟器的操作</h3>
<h4 id="连接-usb-设备"><a class="markdownIt-Anchor" href="#连接-usb-设备"></a> 连接 USB 设备</h4>
<p><font color=green>可以通过 -device 命令将 U 盘连接到模拟器</font>。<br />
如果要连接 <font color=green>USB 设备到 QEMU</font>，那么需要先查询 USB 设备的位置。我们输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsusb -t</span><br></pre></td></tr></table></figure>
<p>来查询 USB 设备的位置。看他的输出：<br />
<img src="https://img.gejiba.com/images/ab3efd6bffb37db1375536c2a68b8af8.png" alt="" /><br />
找到你要连接的 USB 的位置。我这里以<font color=green> 我的 U 盘(Disk 2.0)</font> 为例子。<br />
输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-device usb-ehci,<span class="built_in">id</span>=ehci</span><br><span class="line">-device usb-host,bus=ehci.0,hostbus=20,hostport=1</span><br></pre></td></tr></table></figure>
<p>其中，第一行的命令是指定虚拟的 USB 版本，我这里是 2.0。如果要虚拟 USB 3.0，请输入 <font color=green>xhci</font>。<br />
第二行的命令是<font color=green>定位 USB 设备的位置</font>，我的设备在 Bus 020，Port 1 的位置上，所以输入的bus=20 port=1。而 port 的位置就是<font color=green>指树根下的位置</font>。我是树根下的第 1 个位置，所以填 1。一定要根据自己实际情况填写。</p>
<h4 id="efi-固件的使用"><a class="markdownIt-Anchor" href="#efi-固件的使用"></a> EFI 固件的使用</h4>
<p>QEMU 是可以使用 UEFI 启动的，需要 EFI 固件。<br />
<font color=red>启动命令请查看 -pflash 命令。</font><br />
这里提供下载：<br />
<a href="/download/QEMU_EFI.fd">下载 QEMU_EFI.fd</a></p>
<h4 id="无界面引导"><a class="markdownIt-Anchor" href="#无界面引导"></a> 无界面引导</h4>
<p>有时候我们在模拟虚拟系统的时候需要直接将终端变成 QEMU 的控制台，那么我们加上 -nographic 命令即可。</p>
<h2 id="qemu-镜像下载"><a class="markdownIt-Anchor" href="#qemu-镜像下载"></a> QEMU 镜像下载</h2>
<p><a href="/images/">点击进入下载站</a></p>
</font><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>Reimu 主题去除东方 PROJECT 元素</title>
    <url>/20230817/154130/</url>
    <content><![CDATA[<p>如果你安装了 Reimu 主题后又不想要东方的元素了，可以看看这篇文章。</p>
<h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1>
<p><a href="/20230817/154130/#%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E4%BF%AE%E6%94%B9">  <strong>1. 背景图片修改</strong></a><br />
<a href="/20230817/154130/#%E5%A4%B4%E5%9B%BE%E4%BF%AE%E6%94%B9">      ———— 1.1 头图修改</a><br />
<a href="/20230817/154130/#%E7%BB%99%E5%8D%95%E7%8B%AC%E7%9A%84%E6%96%87%E7%AB%A0%E9%85%8D%E5%9B%BE">      ———— 1.2 给单独的文章配图</a><br />
<a href="/20230817/154130/#%E6%9B%B4%E6%94%B9%E5%A4%AA%E6%9E%81%E5%9B%BE%E5%9B%BE%E6%A0%87">  <strong>2. 更改太极图图标 (重点)</strong></a><br />
<a href="/20230817/154130/#%E8%BE%B9%E6%A0%8F%E5%9B%BE%E6%A0%87%E6%9B%B4%E6%94%B9">      ———— 2.1 边栏图标更改</a><br />
<a href="/20230817/154130/#%E5%8A%A0%E8%BD%BD%E7%95%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%9B%B4%E6%94%B9">      ———— 2.2 加载界面图标更改</a><br />
<a href="/20230817/154130/#%E6%9B%B4%E6%94%B9%E6%96%87%E5%AD%97">  <strong>3. 更改文字</strong></a><br />
<a href="/20230817/154130/#%E6%9B%B4%E6%94%B9%E5%8A%A0%E8%BD%BD%E7%95%8C%E9%9D%A2_%E5%B0%91%E5%A5%B3%E7%A5%88%E7%A5%B7%E4%B8%AD">      ———— 3.1 更改加载界面 “少女祈祷中”</a><br />
<a href="/20230817/154130/#%E6%9B%B4%E6%94%B9_404_%E7%95%8C%E9%9D%A2">      ———— 3.2 更改 “404” 界面</a></p>
<h1 id="背景图片修改"><a class="markdownIt-Anchor" href="#背景图片修改"></a> 背景图片修改</h1>
<h2 id="头图修改"><a class="markdownIt-Anchor" href="#头图修改"></a> 头图修改</h2>
<p>头图的位置在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/themes/reimu/source/images/banner.jpg</span><br></pre></td></tr></table></figure>
<p>您找到合适的图片之后直接更换即可。<br />
如果您的网站速度很慢，不适合在本地存放头图，您可以更改主题目录的 _config.yml 中的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">banner: &quot;/images/banner.jpg&quot; # themes/reimu/source/images/banner.jpg</span><br></pre></td></tr></table></figure>
<p>部分，将内容更改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">banner: &quot;https://xxx.url.org/banner.jpg&quot; # themes/reimu/source/images/banner.jpg</span><br></pre></td></tr></table></figure>
<p><img src="https://img.gejiba.com/images/3b7b1a3e290b1db6151d0961726ce8eb.png" alt="" /></p>
<h2 id="给单独的文章配图"><a class="markdownIt-Anchor" href="#给单独的文章配图"></a> 给单独的文章配图</h2>
<p>只需您在文章的页眉添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cover: 指向图片的 URL</span><br><span class="line"></span><br><span class="line">// 示例：</span><br><span class="line">---</span><br><span class="line">title: 123456</span><br><span class="line">date: 1999-12-31 06:01:13</span><br><span class="line">tags: XX</span><br><span class="line">cover: https://xxx.url.org/bd3.png</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>就可以给文章配上图片了。</p>
<h1 id="更改太极图图标"><a class="markdownIt-Anchor" href="#更改太极图图标"></a> 更改太极图图标</h1>
<h2 id="边栏图标更改"><a class="markdownIt-Anchor" href="#边栏图标更改"></a> 边栏图标更改</h2>
<p>请您进入 <strong>/themes/reimu/source/images/</strong> 目录，使用矢量图绘画工具打开 <strong>taichi.svg</strong> 文件。<br />
然后在上面进行绘画操作即可。<br />
<img src="https://img.gejiba.com/images/10f06ff8e388d28136b494546c99bd5b.png" alt="" /><br />
画完之后保存，Hexo 刷新一遍就可以了。</p>
<h2 id="加载界面图标更改"><a class="markdownIt-Anchor" href="#加载界面图标更改"></a> 加载界面图标更改</h2>
<p>在执行上面的操作之后，您会发现，加载界面仍然是太极图。<br />
莫慌。您先复制一份 <strong>taichi.svg</strong> 文件的副本，使用矢量图绘画工具打开它并进行绘画。绘画完成后不要删除，右键通过 <strong>Microsoft Visual Studio Code</strong> 或其他文本软件打开。<br />
记住这些路径名称：<br />
<img src="https://img.gejiba.com/images/c5943bcc8fc6ae8beabe7d337afe9480.png" alt="" /><br />
如果发现 ellipse 和 path 开头的一段，请复制它们。<br />
然后打开 <strong>/themes/reimu/layout/_partial/loader.ejs</strong> 文件<br />
将这一段删除：<br />
<img src="https://img.gejiba.com/images/a67d82f9cd84d1e7f816a547c0a175a4.png" alt="" /><br />
然后将您刚才复制的 SVG 代码粘贴到此处。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 示例：小星星（和本站一样）</span><br><span class="line"></span><br><span class="line">&lt;path</span><br><span class="line">    sodipodi:type=&quot;star&quot;</span><br><span class="line">    style=&quot;opacity:0.967273;fill:#ffbec0;fill-opacity:0.94581282;stroke:#000000;stroke-width:13.65542089;stroke-dasharray:none&quot;</span><br><span class="line">    id=&quot;path1&quot;</span><br><span class="line">    inkscape:flatsided=&quot;false&quot;</span><br><span class="line">    sodipodi:sides=&quot;5&quot;</span><br><span class="line">    sodipodi:cx=&quot;117.15254&quot;</span><br><span class="line">    sodipodi:cy=&quot;121.49152&quot;</span><br><span class="line">    sodipodi:r1=&quot;281.59967&quot;</span><br><span class="line">    sodipodi:r2=&quot;140.79984&quot;</span><br><span class="line">    sodipodi:arg1=&quot;0.98279372&quot;</span><br><span class="line">    sodipodi:arg2=&quot;1.6111123&quot;</span><br><span class="line">    inkscape:rounded=&quot;0&quot;</span><br><span class="line">    inkscape:randomized=&quot;0&quot;</span><br><span class="line">    d=&quot;M 273.35594,355.79661 111.4776,262.17695 -57.415336,342.45403 -18.400902,159.56852 -146.93973,23.748776 39.050851,4.3389758 128.50242,-159.87933 204.43649,11.010274 388.25943,45.337523 249.19868,170.3629 Z&quot;</span><br><span class="line">    inkscape:transform-center-x=&quot;-5.2622667&quot;</span><br><span class="line">    inkscape:transform-center-y=&quot;-35.297319&quot;</span><br><span class="line">    transform=&quot;matrix(1.5003757,0,0,1.4999156,340.69227,376.01307)&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>效果：<br />
<img src="https://img.gejiba.com/images/ba4cf7aeb1cfb237289943c881beb7ea.png" alt="" /></p>
<h1 id="更改文字"><a class="markdownIt-Anchor" href="#更改文字"></a> 更改文字</h1>
<h2 id="更改加载界面_少女祈祷中"><a class="markdownIt-Anchor" href="#更改加载界面_少女祈祷中"></a> 更改加载界面_少女祈祷中</h2>
<p>打开主题目录的 _config.yml 文件，滑动到下面，找到 preloader 字符：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">preloader:</span><br><span class="line">  enable: true</span><br><span class="line">  text: 正在载入中...</span><br><span class="line">  # text: Loading...</span><br></pre></td></tr></table></figure>
<h2 id="更改_404_界面"><a class="markdownIt-Anchor" href="#更改_404_界面"></a> 更改_404_界面</h2>
<p>打开 <strong>/themes/reimu/languages/zh-CN.yml</strong> 文件，找到 not_found 字符:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">not_found:</span><br><span class="line">  title: 4 0 4 (ﾟ⊿ﾟ)ﾂ</span><br><span class="line">  subtitle: 満 身 創 痍</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>复现</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 的发展历史</title>
    <url>/20230818/205837/</url>
    <content><![CDATA[<p>苹果 iOS 系统已经走过了自己的第 16 个年头，各位新入局的 iOS 玩家可能对 iOS 的历史比较感兴趣，经过整理后，我撰写了这篇文章。</p>
<h1 id="iphone-1-软件"><a class="markdownIt-Anchor" href="#iphone-1-软件"></a> iPhone 1 软件</h1>
<p>iPhone 软件，是民间的叫法。因为当时 iOS 系统还叫做 iPhone runs Mac OS X。<br />
这一版 iOS 可安装设备：iPhone (2G)、iPod touch (第 1 代，1.1 版本起步)<br />
这一版系统是 iOS 的起点，功能只有打电话上网。<br />
越狱也是从这一版 iOS 开始的。用于破解 iPhone，实现安装应用等操作。<br />
如果您是当时的中国用户(水货机器)，那一定对破解的经历非常熟悉。只有破解才能使中国移动、中国联通网络可用。<br />
发布年期：2007年<br />
结束更新：2008年</p>
<table>
<thead>
<tr>
<th>系统版本</th>
<th>发布日期</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.0</td>
<td>2007 年 6 月 29 日</td>
</tr>
<tr>
<td>1.0.1</td>
<td>2007 年 7 月 31 日</td>
</tr>
<tr>
<td>1.0.2</td>
<td>2007 年 8 月 21 日</td>
</tr>
<tr>
<td>1.1</td>
<td>2007 年 9 月 14 日</td>
</tr>
<tr>
<td>1.1.1</td>
<td>2007 年 9 月 27 日</td>
</tr>
<tr>
<td>1.1.2</td>
<td>2007 年 11 月 12 日</td>
</tr>
<tr>
<td>1.1.3</td>
<td>2008 年 1 月 15 日</td>
</tr>
<tr>
<td>1.1.4</td>
<td>2008 年 2 月 26 日</td>
</tr>
<tr>
<td>1.1.5</td>
<td>2008 年 7 月 14 日</td>
</tr>
<tr>
<td><font color=red>注意！要从该系统升级到新系统。需要连接至 iTunes，准备好付款方式，付费进行更新。(仅限于 iPod touch)</font></td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="iphone-os-2-系统"><a class="markdownIt-Anchor" href="#iphone-os-2-系统"></a> iPhone OS 2 系统</h1>
<p>iPhone OS 系统就是正式叫法了。<br />
这一版 iOS 可安装设备：iPhone (2G)、iPod touch (第 1 代)、iPod touch (第 2 代，2.1.1 版本起步)、iPhone 3G<br />
这一版系统 Apple 添加了 App Store 功能，因为刚刚开始，生态不明显。直到现在也很难找到支持 iPhone OS 2 系统的软件了。<br />
发布年期：2008年<br />
结束更新：2009年</p>
<table>
<thead>
<tr>
<th>系统版本</th>
<th>发布日期</th>
</tr>
</thead>
<tbody>
<tr>
<td>2.0</td>
<td>2008 年 7 月 11 日</td>
</tr>
<tr>
<td>2.0.1</td>
<td>2008 年 8 月 4 日</td>
</tr>
<tr>
<td>2.0.2</td>
<td>2008 年 8 月 18 日</td>
</tr>
<tr>
<td>2.1</td>
<td>2008 年 9 月 12 日</td>
</tr>
<tr>
<td>2.1.1</td>
<td>2008 年 9 月 9 日</td>
</tr>
<tr>
<td>2.2</td>
<td>2008 年 11 月 21 日</td>
</tr>
<tr>
<td>2.2.1</td>
<td>2009 年 1 月 27 日</td>
</tr>
<tr>
<td><font color=red>注意！要从该系统升级到新系统。需要连接至 iTunes，准备好付款方式，付费进行更新。(仅限于 iPod touch)</font></td>
<td></td>
</tr>
</tbody>
</table>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>Windows NT4.0 安装教程</title>
    <url>/20230119/063535/</url>
    <content><![CDATA[<h1 id="镜像链接"><a class="markdownIt-Anchor" href="#镜像链接"></a> 镜像链接</h1>
<p><a href="https://pan.huang1111.cn/s/lyBgTL">Click me to download ISO image [FREE!!]</a><br />
<img src="https://img.gejiba.com/images/27da4e034df0231a2bb7ec09508d6137.png" alt="" /></p>
<h1 id="安装教程"><a class="markdownIt-Anchor" href="#安装教程"></a> 安装教程</h1>
<p>1.我们通过虚拟机成功引导系统后，可以看到下面界面：<br />
<img src="https://img.gejiba.com/images/13407dbc2626460c9a71238d7e9add43.jpg" alt="" /><br />
2.按 ENTER 继续，创建分区。<br />
要记住，Windows NT 4.0 Service Pack 1 是不支持大硬盘的，所以我们这里只能给系统分 4096 MB 的分区。<br />
这里我们随便选择，根据你的需求选择是否 FAT16 还是 NTFS。(不支持 FAT32)<br />
<img src="https://img.gejiba.com/images/eac95cb4fdc249de0e22c466a8b36c4c.png" alt="" /><br />
静等第一阶段安装完毕后，重启即可。<br />
注意！重启一直到安装完成之前，都不可以动任何虚拟机硬件，否则开机会蓝屏。<br />
就比如我在第一阶段安装完毕后，添加了一个 Cirrus 显示卡，结果开机蓝屏 0x0000007B<br />
3.重启后，开始第二阶段安装<br />
<img src="https://img.gejiba.com/images/3ccb7f2b8cdfe50abe4ed8bcb0040c1e.png" alt="" /><br />
4.点击“下一步”，选择安装类型，这里我们选择典型。<br />
<img src="https://img.gejiba.com/images/b6ebcb7ac6c1c161fcdad7d5257f29dd.png" alt="" /><br />
5.输入自己的名字和组织，皆为选填。<br />
<img src="https://img.gejiba.com/images/7e58b624f0b674e7bb79473b752418fc.png" alt="" /><br />
6.输入 Windows NT 4.0 Workstation 的 [ CD-Key ]。<br />
<img src="https://img.gejiba.com/images/664496dbed01c7222e6cd7205191470d.jpg" alt="" /><br />
7.输入自己的计算机名称，随便输入。这个名称用于给您电脑命名，供别人在局域网上识别。<br />
<img src="https://img.gejiba.com/images/320b4cc1d869b9ae53ec921d0e9b318b.png" alt="" /><br />
8.设置管理员账户的密码，酌情而定，我这里不填。<br />
<img src="https://img.gejiba.com/images/b1aee64d28853da06f1c4f266f063bfa.png" alt="" /><br />
9.这里选择“否”，然后点击“下一步”。<br />
<img src="https://img.gejiba.com/images/df453d8f0c90b757c6568899e86e2c09.png" alt="" /><br />
10.根据您的需求来挑选，选完之后点击“下一步”。<br />
<img src="https://img.gejiba.com/images/acf185c6f2093204bc904b30b358946e.png" alt="" /><br />
11.如果您想稍后再设置网络，那就选择“此时不要将计算机连接到网络”。因为我要上网，所以这里会详细讲解如何设置网络。<br />
<img src="https://img.gejiba.com/images/9932dabfbbb1b2832fd78d83a8662cd6.png" alt="" /><br />
12.点击“开始搜索”，搜寻网卡，搜到了你需要的网卡之后，点击“下一步”。<br />
<img src="https://img.gejiba.com/images/9b6782f707f703733eec3e05466832f8.jpg" alt="" /><br />
13.这里我们直接“下一步”。<br />
<img src="https://img.gejiba.com/images/b9b1e73bd8b0ce8e3ce7e479319d00e9.jpg" alt="" /><br />
如果出现一个要设置“网卡 ID”的东西，直接点击“Skip”。<br />
14.这里一定要选择“是”，否则系统就不会使用 DHCP，需要你自己配置网络，很麻烦。<br />
<img src="https://img.gejiba.com/images/632444ae356f000c14cd4ccf84340fc9.jpg" alt="" /><br />
15.点击“下一步”。<br />
<img src="https://img.gejiba.com/images/796666538ef1ffcaa4d51675da92e3b0.jpg" alt="" /><br />
启用网络后，就开始安装 Windows NT Workstation 了。<br />
16.出现显示器设置后，我们点击“65536 色”，然后点击“测试”。<br />
<img src="https://img.gejiba.com/images/6ecde8d8ac3b2576ab5700a4d45429ac.jpg" alt="" /><br />
如果点击“测试”之后，显示器没有出现异常，那么就可以点击“确定”继续下一步安装了。<br />
<img src="https://img.gejiba.com/images/f33fae8c67e750c81dcd9b20bd649c7e.jpg" alt="" /><br />
等会系统就安装完成了。<br />
后续安装：<br />
因为 Windows NT4.0 Service Pack 1 和所附带的 Internet Explorer 3.0 十分古老，我推荐安装 Service Pack 6 之后再安装 Internet Explorer 5.0。<br />
17.在安装盘中找到 SP6I386_CN.EXE，打开它，等待复制文件之后点击“安装”。<br />
<img src="https://img.gejiba.com/images/c38d244a6be2a67afa8663ab97980c16.jpg" alt="" /><br />
18.重启后，再次打开安装盘，找到 “Internet Explorer 5.0” 文件夹。<br />
找到“IE5SETUP.EXE”，打开它。<br />
<img src="https://img.gejiba.com/images/c74b6d6e80737d95f4620993ee2210b5.jpg" alt="" /><br />
等待安装即可。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>历史锁那(Sana)专辑</title>
    <url>/20230725/221318/</url>
    <content><![CDATA[<center>
<p><img src="https://img.gejiba.com/images/167d065688a66751b4bea8bdf4bae325.jpg" alt="" /></p>
<h1 id="好きなひと"><a class="markdownIt-Anchor" href="#好きなひと"></a> 好きなひと。</h1>
<h2 id="鎖那-honeyworks-20140817"><a class="markdownIt-Anchor" href="#鎖那-honeyworks-20140817"></a> 鎖那 × HoneyWorks [2014.08.17]</h2>
<p>价格：120 元（带侧封）<br />
<img src="https://img.gejiba.com/images/e65d8b14bf54ac8cd181d9343f9d61b0.png" alt="歌曲列表" /><br />
<font color=red><strong>01</strong></font> 未来図<br />
<font color=red><strong>02</strong></font> 告白予行練習<br />
<font color=red><strong>03</strong></font> テレカクシ思春期<br />
<font color=red><strong>04</strong></font> 初恋の絵本<br />
<font color=red><strong>05</strong></font> 告白ライバル宣言<br />
<font color=red><strong>06</strong></font> ヤキモチの答え<br />
<font color=red><strong>07</strong></font> 病名恋ワズライ<br />
<font color=red><strong>08</strong></font> イノコリ先生<br />
<font color=red><strong>09</strong></font> ロリババアに恋をした<br />
<font color=red><strong>10</strong></font> ラズベリー*モンスター</p>
</center><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>图床已废</title>
    <url>/20250519/124903/</url>
    <content><![CDATA[<p>本网站原来的图床已经无法使用，而且我也没做备份。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>QEMU 基础命令学习</title>
    <url>/20220826/022653/</url>
    <content><![CDATA[<center>
<div style="width:100px; height:100px; border-radius:100%; overflow:hidden;">
    <img src="https://steve372yeyeye.github.io/images/avatar.gif" alt>
</div>
<br>
<font size="6"><center>？、アイドル宣言</center></font>
<font size="3"><center>的博客小站</center></font>
<br>
<p><a href="/">返回到首页</a></p>
<br>
<font color=#66ccff>作者：？、アイドル宣言</font>
</center>
<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<font face="宋体">
<p>本文章是为了让各位更好的学习 QEMU 命令。<br />
<font color=red>这里只学习 qemu-system，没有 qemu-user 的内容。</font></p>
<h2 id="qemu-是什么"><a class="markdownIt-Anchor" href="#qemu-是什么"></a> QEMU 是什么</h2>
<p>QEMU是一套由<font color=green>法布里斯·贝拉(Fabrice Bellard)</font>所编写的以GPL许可证分发源码的模拟处理器软件，在<font color=green>GNU/Linux</font>平台上使用广泛。<font color=green>Bochs，PearPC</font>等与其类似，但不具备其许多特性，比如高速度及跨平台的特性，通过KVM，QEMU能虚拟化至真实电脑的速度。</p>
<h2 id="qemu-有什么用"><a class="markdownIt-Anchor" href="#qemu-有什么用"></a> QEMU 有什么用？</h2>
<p>简单来说就是能跨平台高速模拟各种系统。不恰当的比喻：就是能在手机上运行 Windows 系统，而且速度很快。</p>
<h1 id="开始学习"><a class="markdownIt-Anchor" href="#开始学习"></a> 开始学习</h1>
<h2 id="安装-qemu"><a class="markdownIt-Anchor" href="#安装-qemu"></a> 安装 QEMU</h2>
<h3 id="编译安装"><a class="markdownIt-Anchor" href="#编译安装"></a> 编译安装</h3>
<blockquote>
<p>安装依赖</p>
</blockquote>
<p>QEMU 可以通过编译的方式安装。<br />
需要先根据你系统的情况，安装 QEMU 必需的依赖(一般是这些)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev libsdl1.2-dev libsnappy-dev liblzo2-dev zlib1g-dbg automake gcc python wget &amp;&amp; apt-get install build-essential</span><br></pre></td></tr></table></figure>
<p><a href="https://git-scm.com">Git</a> <a href="https://github.com/GNOME/glib">Glib</a> <a href="https://baike.baidu.com/item/FDT/1691090?fr=aladdin">fdt</a> <a href="http://www.pixman.org">pixman</a> <a href="http://www.zlib.net">zlib</a> <a href="http://www.libsdl.org">libsdl</a> <a href="https://github.com/google/snappy">snappy</a> <a href="https://launchpad.net/ubuntu/+source/lzo2/">lzo2</a> <a href="https://www.solvusoft.com/zh-cn/file-extensions/software/gnu-operating-system/automake/">automake</a> <a href="https://www.gnu.org/software/gcc/">gcc</a> <a href="https://www.python.org">python</a><br />
安装完成后，需要下载 QEMU 的源码包或者是克隆。</p>
<blockquote>
<p>克隆 QEMU</p>
</blockquote>
<p>请输入以下命令<font color=green>(北京外国语大学开源软件镜像站)</font>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://mirrors.bfsu.edu.cn/git/qemu.git</span><br></pre></td></tr></table></figure>
<p>然后你应该会在主目录看到一个叫“qemu”的文件夹，这就是最新的源码包。</p>
<blockquote>
<p>下载 QEMU 源码<font color=green>(tar.xz)</font>：</p>
</blockquote>
<p>在此网站下载源码包：<br />
<a href="https://download.qemu.org">https://download.qemu.org</a><br />
然后通过 tar 命令解压：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xvf ./qemu-7.1.0-rc3.tar.xz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>开始编译</p>
</blockquote>
<p>如果你前面的操作完成了的话，就可以开始编译了。<br />
首先我们要 cd 到目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/qemu-7.1.0-rc3</span><br></pre></td></tr></table></figure>
<p>然后开始配置编译内容，输入 ./configure 即可。但是这样的话没用的东西会很多，所以我们在 configure 里面加参数。参数可以查阅 <font color=green>./configure --help</font>。比如我们只需要编译一个架构而不是全局编译，那么我们输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --target-list=x86_64-softmmu</span><br></pre></td></tr></table></figure>
<p>其中，<font color=green>x86_64-softmmu</font> 是你要编译的架构。<br />
那我们想编译多个架构怎么办呢？<br />
只需要在架构后加上其他架构即可，用小写的逗号分隔。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --target-list=x86_64-softmmu,aarch64-softmmu,ppc-softmmu</span><br></pre></td></tr></table></figure>
<p>还有其他的编译选项。这里就不说了。<br />
等待配置完成后，就可以开始编译 qemu 了。<br />
输入 make 可以开始，也可以加参数。比如我要是想开 8 核编译那么输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure>
<p>具体几核看你设备的 CPU 核心数。不加参数只会开一核编译，速度很慢。</p>
<blockquote>
<p>编译后安装</p>
</blockquote>
<p>编译完成后，你直接运行 qemu 是没有反应的，提示命令不存在。我们需要再安装一下 qemu 才能使用。<br />
输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>就安装完成了。</p>
<h3 id="brew-安装-qemu"><a class="markdownIt-Anchor" href="#brew-安装-qemu"></a> brew 安装 QEMU</h3>
<p>Mac 电脑不需要必须通过编译安装，也可以通过软件包管理器安装 QEMU。<br />
首先给你的 Mac 电脑安装 <font color=green>HomeBrew</font>。这里推荐使用国内安装脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>跟着安装脚本走。安装完成 Homebrew 之后，输入以下命令安装 QEMU：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install qemu</span><br></pre></td></tr></table></figure>
<p>等待安装完成即可享用 QEMU。<br />
<img src="https://img.gejiba.com/images/2c362227e66bba6a2db161e2bc5c8052.png" alt="" /></p>
<h3 id="apt-安装-qemu"><a class="markdownIt-Anchor" href="#apt-安装-qemu"></a> APT 安装 QEMU</h3>
<p><font color=green>apt</font> 是 <font color=green>Debian GNU/Linux</font> 以及基于 Debian 的其他发行版中默认的软件包管理器。我们使用它安装 QEMU。同样也不用必须编译安装。<br />
输入以下命令，安装 qemu 的命令行。以 x86_64/i386 架构为例，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install qemu-system-x86</span><br></pre></td></tr></table></figure>
<p>等待安装完成即可。<br />
如果你的 Linux 系统有图形界面，那么可以直接安装 <font color=green>qemu 的图形前端</font>。输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install aqemu</span><br></pre></td></tr></table></figure>
<p>安装完成后，可以在程序菜单里看到 aqemu，直接运行即可。</p>
<h2 id="qemu-的使用"><a class="markdownIt-Anchor" href="#qemu-的使用"></a> QEMU 的使用</h2>
<h3 id="运行-qemu"><a class="markdownIt-Anchor" href="#运行-qemu"></a> 运行 QEMU</h3>
<p>我们按照上面的步骤安装完成 QEMU 之后，可以查看一下安装完 QEMU 的版本，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qemu-system-&lt;架构&gt; --version</span><br></pre></td></tr></table></figure>
<p><img src="https://img.gejiba.com/images/7085de537a84b3fd450482148b6b8d2c.png" alt="" /><br />
可以看到 QEMU 已经正确安装，我们现在就可以试试水，看看如何启动。</p>
<blockquote>
<p>熟悉命令</p>
</blockquote>
<p>QEMU 基本命令如下(x86_64)：</p>
<pre><code>-accel 加速类型，一般为(kvm,hax,hvf,tcg)
-machine 机器类型，一般为pc和q35。具体可查看help
-net nic,model=&lt;网卡名称&gt; 设置虚拟机网卡。
-net user 设置虚拟机网络模式，有user和tap可选。
-hda,-hdb,-hdc,-hdd 磁盘位，放入磁盘镜像。
-m 256 设置的内存(RAM)，单位是MB。1GB=1024MB
-vga vmware 设置的显示卡
-device 添加各种硬件设备。
-soundhw sb16 启用声音支持。
-cdrom 光盘位，放入 ISO 镜像。
-fda,-fdb 软盘位，放入磁盘镜像。
-cpu 设置虚拟的 CPU
-smp &lt;核心数&gt; 设置虚拟cpu核心数。默认单核
-vnc :&lt;端口号&gt; 开启后使用 VNC Viewer 连接。
-pflash &lt;固件&gt; 并行闪存镜像，一般用于 EFI 启动。
-nographic 无图形启动，一般用于 Linux。
-win2k-hack （i386）在安装 Windows 2000 时使用它以避免磁盘已满错误，但会降低磁盘性能，安装完成后可以删掉该命令。
-usb 启用 USB 控制器，其他 USB 设置需要使用 -device 命令。
-sdl 开启后使用 XSDL Server 连接。 
-k &lt;language&gt; 键盘的语言，一般是为了适配不同语种的键盘。一般不用填。
-boot c 引导顺序，c是硬盘、n是网络、d是光盘、s是软盘。
-name 虚拟机名称，如果你是 VNC 连接，该名称将显示到你 VNC 远程桌面信息。
</code></pre>
<p>这些命令组合起来可以运行虚拟机。</p>
<blockquote>
<p>一个实例</p>
</blockquote>
<p>下面是包含了上面的部分命令的<font color=green>一个实例</font>，不知道你能不能看懂。</p>
<font color=red>
qemu-system-x86_64 -hda /home/steve372/win10.qcow2 -cdrom /home/steve372/win10.iso -m 768 -machine q35 -accel kvm -smp 2 -vga std -soundhw ac97 -usb -device usb-tablet -boot d -pflash /home/steve372/QEMU_EFI.fd -net nic,model=rtl8139 -net user -vnc :0 -name "Windows 10"
</font>
<p>如果不能看懂，可以看下面的<font color=green>“命令详解“</font>。来更加了解这些命令。</p>
<h3 id="命令详解"><a class="markdownIt-Anchor" href="#命令详解"></a> 命令详解</h3>
<h4 id="-accel-命令"><a class="markdownIt-Anchor" href="#-accel-命令"></a> -accel 命令</h4>
<p>-accel 命令可以为<font color=green>虚拟机提供加速</font>，有以下加速类型：<strong>kvm,hax,hvf,tcg</strong>。当然，这些命令要运行起来都有一定的要求，如下：</p>
<pre><code>kvm 只能在 Linux 环境运行，并且需要内核支持（手机可以洗洗睡了）
hvf 只能在 macOS 环境运行。
hax 只能在 Windows 或 macOS 环境运行，似乎不太稳定。
tcg 通用。手机只能用 tcg 了
</code></pre>
<p>请根据你自己的系统进行搭配。<br />
这些加速类型之中，<strong>kvm是最快的，hvf和hax差不多，最后是tcg。</strong><br />
稳定性中，<strong>kvm、hvf、tcg都挺稳定的，hax一般。</strong></p>
<h4 id="-machine-命令"><a class="markdownIt-Anchor" href="#-machine-命令"></a> -machine 命令</h4>
<p>-machine 命令可以设置机器类型。有以下机器类型：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        机器类型列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">microvm              microvm (i386)</span><br><span class="line">pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-7.0)</span><br><span class="line">pc-i440fx-7.0        Standard PC (i440FX + PIIX, 1996) (default)</span><br><span class="line">pc-i440fx-6.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-6.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-6.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-5.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-4.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-3.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-3.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.9        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.8        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.7        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.6        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.5        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.4        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.3        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.12       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.11       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.10       Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)</span><br><span class="line">pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996) (deprecated)</span><br><span class="line">q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-7.0)</span><br><span class="line">pc-q35-7.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-6.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-5.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.2           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.0.1         Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-4.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.1           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-3.0           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.9           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.8           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.7           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.6           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.5           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.4           Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.12          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.11          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">pc-q35-2.10          Standard PC (Q35 + ICH9, 2009)</span><br><span class="line">isapc                ISA-only PC</span><br><span class="line">none                 empty machine</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>一般来说，我们最常用的就是 pc 和 q35。如果你使用的是别人的镜像，<font color=#66ccff>那么务必跟随镜像主的安排。</font></p>
<h4 id="-net-命令"><a class="markdownIt-Anchor" href="#-net-命令"></a> -net 命令</h4>
<p>QEMU 的 -net 命令是提供跟网络相关的功能，这里只介绍最基本的两种方式。<br />
-net 的用法是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-net user -net nic,model=&lt;网卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>首先，前面的 -net 有五种选择：user, tap, bridge, vde, socket<br />
如果你没有特殊需求，<font color=green>直接使用 User 网络即可。</font><br />
然后，后面的 -net 是选择虚拟的网卡。QEMU 这里有以下网卡可选：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        虚拟网卡类型列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e1000</span><br><span class="line">e1000-82544gc</span><br><span class="line">e1000-82545em</span><br><span class="line">e1000e</span><br><span class="line">i82550</span><br><span class="line">i82551</span><br><span class="line">i82557a</span><br><span class="line">i82557b</span><br><span class="line">i82557c</span><br><span class="line">i82558a</span><br><span class="line">i82558b</span><br><span class="line">i82559a</span><br><span class="line">i82559b</span><br><span class="line">i82559c</span><br><span class="line">i82559er</span><br><span class="line">i82562</span><br><span class="line">i82801</span><br><span class="line">ne2k_pci</span><br><span class="line">pcnet</span><br><span class="line">rtl8139</span><br><span class="line">tulip</span><br><span class="line">virtio-net-pci</span><br><span class="line">virtio-net-pci-non-transitional</span><br><span class="line">virtio-net-pci-transitional</span><br><span class="line">vmxnet3</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>我们常用的是 <strong>e1000,ne2k_pci,rtl8139,virtio</strong> 网卡。<br />
<font color=#66ccff>还是要看镜像主的安排。</font>比如你的镜像支持 rtl8139 网卡，那么输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-net user -net nic,model=rtl8139</span><br></pre></td></tr></table></figure>
<p>就可以了。</p>
<h4 id="-hda-命令"><a class="markdownIt-Anchor" href="#-hda-命令"></a> -hda 命令</h4>
<p>-hda,-hdb,-hdc,-hdd 是磁盘镜像位，需将下载到的镜像放到这里。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-hda &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>
<p>其中，文件支持所有可用的镜像文件。<br />
<font color=red>不推荐使用 -hdc 参数，可能会出问题。</font><br />
<font color=green>如果需要使用 virtio 磁盘，那么需要使用 -drive 命令。</font></p>
<h4 id="-m-命令"><a class="markdownIt-Anchor" href="#-m-命令"></a> -m 命令</h4>
<p>-m 命令是设置你虚拟机的内存用的。<font color=green>M 是 Memory(内存) 的首字母。</font>用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-m &lt;数字&gt;</span><br></pre></td></tr></table></figure>
<p>数字单位是 MB。1 GB=1024 MB、3 GB=3072 MB</p>
<h4 id="-vga-命令"><a class="markdownIt-Anchor" href="#-vga-命令"></a> -vga 命令</h4>
<p>-vga 命令可以<font color=green>模拟虚拟机的显卡</font>，用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-vga &lt;显卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>目前支持的显卡有：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">std                  standard VGA (default)</span><br><span class="line">cirrus               Cirrus VGA</span><br><span class="line">vmware               VMWare SVGA</span><br><span class="line">xenfb                Xen paravirtualized framebuffer</span><br><span class="line">virtio               Virtio VGA</span><br><span class="line">QXL</span><br></pre></td></tr></table></figure>
<p>如果你模拟的是 Windows 的话，那么可能需要<font color=red>根据你的 Windows 系统选择显卡。</font>如下：</p>
<pre><code>Windows 3.1     需要手动安装 cirrus 驱动。
Windows 95      cirrus
Windows 98      cirrus
Windows 2000    cirrus
Windows XP      std / VMware
Windows Vista   std / VMware
Windows 7       std / VMware
Windows 8       std / VMware
Windows 8.1     std / VMware
Windows 10      std / VMware
Windows 11      std / VMware
</code></pre>
<p>Linux 应该可以选择 <font color=green>virtio</font> 显卡。</p>
<h4 id="-device-命令"><a class="markdownIt-Anchor" href="#-device-命令"></a> -device 命令</h4>
<p>-device 命令是 QEMU 处理硬件的一个媒介，他也可以取代部分命令。比如<font color=green> -soundhw 和 -usbdevice</font>。如果需要将 VNC 和鼠标对齐的话，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-usb // 启用 USB 控制器</span><br><span class="line">-device usb-tablet // 添加虚拟的 USB 触控板 </span><br></pre></td></tr></table></figure>
<p>就可以了。更深层次的 USB 命令到后面会讲。</p>
<h4 id="-soundhw-命令"><a class="markdownIt-Anchor" href="#-soundhw-命令"></a> -soundhw 命令</h4>
<p>-soundhw 命令是启用声音支持，直白了说就是能让虚拟机出声音。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-soundhw &lt;声卡名称&gt;</span><br></pre></td></tr></table></figure>
<p>我们只需要<font color=green>填入声卡名称</font>就可以了，声卡名如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ac97        Intel 82801AA AC97 Audio</span><br><span class="line">adlib       雅马哈 YM3812 (OPL2)</span><br><span class="line">cs4231a     CS4231A</span><br><span class="line">es1370      ENSONIQ AudioPCI ES1370</span><br><span class="line">gus         Gravis Ultrasound GF1</span><br><span class="line">hda         Intel HD Audio</span><br><span class="line">pcspk       PC speaker</span><br><span class="line">sb16        创新科技声霸卡 16</span><br></pre></td></tr></table></figure>
<p>我们常用的是 sb16 和 ac97 还有 hda。</p>
<h4 id="-cdrom-命令"><a class="markdownIt-Anchor" href="#-cdrom-命令"></a> -cdrom 命令</h4>
<p>该命令是光驱位，放入光盘镜像（*.ISO）用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-cdrom &lt;文件路径&gt;</span><br></pre></td></tr></table></figure>
<p>直接将光盘文件路径写下即可。<br />
<font color=red>光盘是有code显示的，可以通过这个代码定位问题。</font><br />
<img src="https://img.gejiba.com/images/b4599dcccf66d9f30b7020f4932a617e.png" alt="" /><br />
<img src="https://img.gejiba.com/images/25ba59fbd94a92295fcb09e2981cc2bb.png" alt="" /></p>
<h4 id="-cpu-命令"><a class="markdownIt-Anchor" href="#-cpu-命令"></a> -cpu 命令</h4>
<p>模拟你要模拟的 CPU，可选 CPU 有：</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        CPU 列表
    </div>
    <div class='spoiler-content'>
        <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x86 486                   (alias configured by machine type)</span><br><span class="line">x86 486-v1                </span><br><span class="line">x86 Broadwell             (alias configured by machine type)</span><br><span class="line">x86 Broadwell-IBRS        (alias of Broadwell-v3)</span><br><span class="line">x86 Broadwell-noTSX       (alias of Broadwell-v2)</span><br><span class="line">x86 Broadwell-noTSX-IBRS  (alias of Broadwell-v4)</span><br><span class="line">x86 Broadwell-v1          Intel Core Processor (Broadwell)</span><br><span class="line">x86 Broadwell-v2          Intel Core Processor (Broadwell, no TSX)</span><br><span class="line">x86 Broadwell-v3          Intel Core Processor (Broadwell, IBRS)</span><br><span class="line">x86 Broadwell-v4          Intel Core Processor (Broadwell, no TSX, IBRS)</span><br><span class="line">x86 Cascadelake-Server    (alias configured by machine type)</span><br><span class="line">x86 Cascadelake-Server-noTSX  (alias of Cascadelake-Server-v3)</span><br><span class="line">x86 Cascadelake-Server-v1  Intel Xeon Processor (Cascadelake)</span><br><span class="line">x86 Cascadelake-Server-v2  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES]</span><br><span class="line">x86 Cascadelake-Server-v3  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, no TSX]</span><br><span class="line">x86 Cascadelake-Server-v4  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, no TSX]</span><br><span class="line">x86 Cascadelake-Server-v5  Intel Xeon Processor (Cascadelake) [ARCH_CAPABILITIES, EPT switching, XSAVES, no TSX]</span><br><span class="line">x86 Conroe                (alias configured by machine type)</span><br><span class="line">x86 Conroe-v1             Intel Celeron_4x0 (Conroe/Merom Class Core 2)</span><br><span class="line">x86 Cooperlake            (alias configured by machine type)</span><br><span class="line">x86 Cooperlake-v1         Intel Xeon Processor (Cooperlake)</span><br><span class="line">x86 Cooperlake-v2         Intel Xeon Processor (Cooperlake) [XSAVES]</span><br><span class="line">x86 Denverton             (alias configured by machine type)</span><br><span class="line">x86 Denverton-v1          Intel Atom Processor (Denverton)</span><br><span class="line">x86 Denverton-v2          Intel Atom Processor (Denverton) [no MPX, no MONITOR]</span><br><span class="line">x86 Denverton-v3          Intel Atom Processor (Denverton) [XSAVES, no MPX, no MONITOR]</span><br><span class="line">x86 Dhyana                (alias configured by machine type)</span><br><span class="line">x86 Dhyana-v1             Hygon Dhyana Processor</span><br><span class="line">x86 Dhyana-v2             Hygon Dhyana Processor [XSAVES]</span><br><span class="line">x86 EPYC                  (alias configured by machine type)</span><br><span class="line">x86 EPYC-IBPB             (alias of EPYC-v2)</span><br><span class="line">x86 EPYC-Milan            (alias configured by machine type)</span><br><span class="line">x86 EPYC-Milan-v1         AMD EPYC-Milan Processor</span><br><span class="line">x86 EPYC-Rome             (alias configured by machine type)</span><br><span class="line">x86 EPYC-Rome-v1          AMD EPYC-Rome Processor</span><br><span class="line">x86 EPYC-Rome-v2          AMD EPYC-Rome Processor</span><br><span class="line">x86 EPYC-v1               AMD EPYC Processor</span><br><span class="line">x86 EPYC-v2               AMD EPYC Processor (with IBPB)</span><br><span class="line">x86 EPYC-v3               AMD EPYC Processor</span><br><span class="line">x86 Haswell               (alias configured by machine type)</span><br><span class="line">x86 Haswell-IBRS          (alias of Haswell-v3)</span><br><span class="line">x86 Haswell-noTSX         (alias of Haswell-v2)</span><br><span class="line">x86 Haswell-noTSX-IBRS    (alias of Haswell-v4)</span><br><span class="line">x86 Haswell-v1            Intel Core Processor (Haswell)</span><br><span class="line">x86 Haswell-v2            Intel Core Processor (Haswell, no TSX)</span><br><span class="line">x86 Haswell-v3            Intel Core Processor (Haswell, IBRS)</span><br><span class="line">x86 Haswell-v4            Intel Core Processor (Haswell, no TSX, IBRS)</span><br><span class="line">x86 Icelake-Client        (alias configured by machine type)</span><br><span class="line">x86 Icelake-Client-noTSX  (alias of Icelake-Client-v2)</span><br><span class="line">x86 Icelake-Client-v1     Intel Core Processor (Icelake) [deprecated]</span><br><span class="line">x86 Icelake-Client-v2     Intel Core Processor (Icelake) [no TSX, deprecated]</span><br><span class="line">x86 Icelake-Client-v3     Intel Core Processor (Icelake) [no TSX, XSAVES, deprecated]</span><br><span class="line">x86 Icelake-Server        (alias configured by machine type)</span><br><span class="line">x86 Icelake-Server-noTSX  (alias of Icelake-Server-v2)</span><br><span class="line">x86 Icelake-Server-v1     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v2     Intel Xeon Processor (Icelake) [no TSX]</span><br><span class="line">x86 Icelake-Server-v3     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v4     Intel Xeon Processor (Icelake)</span><br><span class="line">x86 Icelake-Server-v5     Intel Xeon Processor (Icelake) [XSAVES]</span><br><span class="line">x86 Icelake-Server-v6     Intel Xeon Processor (Icelake) [5-level EPT]</span><br><span class="line">x86 IvyBridge             (alias configured by machine type)</span><br><span class="line">x86 IvyBridge-IBRS        (alias of IvyBridge-v2)</span><br><span class="line">x86 IvyBridge-v1          Intel Xeon E3-12xx v2 (Ivy Bridge)</span><br><span class="line">x86 IvyBridge-v2          Intel Xeon E3-12xx v2 (Ivy Bridge, IBRS)</span><br><span class="line">x86 KnightsMill           (alias configured by machine type)</span><br><span class="line">x86 KnightsMill-v1        Intel Xeon Phi Processor (Knights Mill)</span><br><span class="line">x86 Nehalem               (alias configured by machine type)</span><br><span class="line">x86 Nehalem-IBRS          (alias of Nehalem-v2)</span><br><span class="line">x86 Nehalem-v1            Intel Core i7 9xx (Nehalem Class Core i7)</span><br><span class="line">x86 Nehalem-v2            Intel Core i7 9xx (Nehalem Core i7, IBRS update)</span><br><span class="line">x86 Opteron_G1            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G1-v1         AMD Opteron 240 (Gen 1 Class Opteron)</span><br><span class="line">x86 Opteron_G2            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G2-v1         AMD Opteron 22xx (Gen 2 Class Opteron)</span><br><span class="line">x86 Opteron_G3            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G3-v1         AMD Opteron 23xx (Gen 3 Class Opteron)</span><br><span class="line">x86 Opteron_G4            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G4-v1         AMD Opteron 62xx class CPU</span><br><span class="line">x86 Opteron_G5            (alias configured by machine type)</span><br><span class="line">x86 Opteron_G5-v1         AMD Opteron 63xx class CPU</span><br><span class="line">x86 Penryn                (alias configured by machine type)</span><br><span class="line">x86 Penryn-v1             Intel Core 2 Duo P9xxx (Penryn Class Core 2)</span><br><span class="line">x86 SandyBridge           (alias configured by machine type)</span><br><span class="line">x86 SandyBridge-IBRS      (alias of SandyBridge-v2)</span><br><span class="line">x86 SandyBridge-v1        Intel Xeon E312xx (Sandy Bridge)</span><br><span class="line">x86 SandyBridge-v2        Intel Xeon E312xx (Sandy Bridge, IBRS update)</span><br><span class="line">x86 Skylake-Client        (alias configured by machine type)</span><br><span class="line">x86 Skylake-Client-IBRS   (alias of Skylake-Client-v2)</span><br><span class="line">x86 Skylake-Client-noTSX-IBRS  (alias of Skylake-Client-v3)</span><br><span class="line">x86 Skylake-Client-v1     Intel Core Processor (Skylake)</span><br><span class="line">x86 Skylake-Client-v2     Intel Core Processor (Skylake, IBRS)</span><br><span class="line">x86 Skylake-Client-v3     Intel Core Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Client-v4     Intel Core Processor (Skylake, IBRS, no TSX) [IBRS, XSAVES, no TSX]</span><br><span class="line">x86 Skylake-Server        (alias configured by machine type)</span><br><span class="line">x86 Skylake-Server-IBRS   (alias of Skylake-Server-v2)</span><br><span class="line">x86 Skylake-Server-noTSX-IBRS  (alias of Skylake-Server-v3)</span><br><span class="line">x86 Skylake-Server-v1     Intel Xeon Processor (Skylake)</span><br><span class="line">x86 Skylake-Server-v2     Intel Xeon Processor (Skylake, IBRS)</span><br><span class="line">x86 Skylake-Server-v3     Intel Xeon Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Server-v4     Intel Xeon Processor (Skylake, IBRS, no TSX)</span><br><span class="line">x86 Skylake-Server-v5     Intel Xeon Processor (Skylake, IBRS, no TSX) [IBRS, XSAVES, EPT switching, no TSX]</span><br><span class="line">x86 Snowridge             (alias configured by machine type)</span><br><span class="line">x86 Snowridge-v1          Intel Atom Processor (SnowRidge)</span><br><span class="line">x86 Snowridge-v2          Intel Atom Processor (Snowridge, no MPX)</span><br><span class="line">x86 Snowridge-v3          Intel Atom Processor (Snowridge, no MPX) [XSAVES, no MPX]</span><br><span class="line">x86 Snowridge-v4          Intel Atom Processor (Snowridge, no MPX) [no split lock detect, no core-capability]</span><br><span class="line">x86 Westmere              (alias configured by machine type)</span><br><span class="line">x86 Westmere-IBRS         (alias of Westmere-v2)</span><br><span class="line">x86 Westmere-v1           Westmere E56xx/L56xx/X56xx (Nehalem-C)</span><br><span class="line">x86 Westmere-v2           Westmere E56xx/L56xx/X56xx (IBRS update)</span><br><span class="line">x86 athlon                (alias configured by machine type)</span><br><span class="line">x86 athlon-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 core2duo              (alias configured by machine type)</span><br><span class="line">x86 core2duo-v1           Intel(R) Core(TM)2 Duo CPU     T7700  @ 2.40GHz</span><br><span class="line">x86 coreduo               (alias configured by machine type)</span><br><span class="line">x86 coreduo-v1            Genuine Intel(R) CPU           T2600  @ 2.16GHz</span><br><span class="line">x86 kvm32                 (alias configured by machine type)</span><br><span class="line">x86 kvm32-v1              Common 32-bit KVM processor</span><br><span class="line">x86 kvm64                 (alias configured by machine type)</span><br><span class="line">x86 kvm64-v1              Common KVM processor</span><br><span class="line">x86 n270                  (alias configured by machine type)</span><br><span class="line">x86 n270-v1               Intel(R) Atom(TM) CPU N270   @ 1.60GHz</span><br><span class="line">x86 pentium               (alias configured by machine type)</span><br><span class="line">x86 pentium-v1            </span><br><span class="line">x86 pentium2              (alias configured by machine type)</span><br><span class="line">x86 pentium2-v1           </span><br><span class="line">x86 pentium3              (alias configured by machine type)</span><br><span class="line">x86 pentium3-v1           </span><br><span class="line">x86 phenom                (alias configured by machine type)</span><br><span class="line">x86 phenom-v1             AMD Phenom(tm) 9550 Quad-Core Processor</span><br><span class="line">x86 qemu32                (alias configured by machine type)</span><br><span class="line">x86 qemu32-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 qemu64                (alias configured by machine type)</span><br><span class="line">x86 qemu64-v1             QEMU Virtual CPU version 2.5+</span><br><span class="line">x86 base                  base CPU model type with no features enabled</span><br><span class="line">x86 max                   Enables all features supported by the accelerator in the current host</span><br></pre></td></tr></table></figure>
    </div>
</div>
<p>具体根据自己需求选择。</p>
<h4 id="-smp-命令"><a class="markdownIt-Anchor" href="#-smp-命令"></a> -smp 命令</h4>
<p>该命令可以指定虚拟 CPU 的数量，核心数，线程数等。用法：<br />
<font color=red><br />
只指定 CPU 数量：<br />
</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-smp 2</span><br></pre></td></tr></table></figure>
<p>即代表 QEMU 会模拟两个 CPU 出来（不是核心）。<br />
当然，你也可以加参数，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-smp cores=2,threads=4,sockets=1</span><br></pre></td></tr></table></figure>
<p>这条命令的意思是：<font color=green>一个 CPU 插槽，双核四线程。</font></p>
<h4 id="-vnc-命令"><a class="markdownIt-Anchor" href="#-vnc-命令"></a> -vnc 命令</h4>
<p>这条命令可以让你的虚拟机通过 VNC Viewer 连接。用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-vnc :&lt;端口号&gt;</span><br></pre></td></tr></table></figure>
<p>输入后直接使用 VNC Viewer 连接。如果 -vnc :0 那么在 VNC Viewer 的连接中就设置为 &lt;ip地址&gt;:0。如果你是手机开的模拟器，输入<font color=green> 127.0.0.1:0 </font></p>
<h4 id="-pflash-命令"><a class="markdownIt-Anchor" href="#-pflash-命令"></a> -pflash 命令</h4>
<p>一般用于 EFI 引导启动，用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-pflash &lt;EFI 固件&gt;</span><br></pre></td></tr></table></figure>
<p>需要你有 EFI 固件，一般是 fd 格式。</p>
<h3 id="其他-qemu-模拟器的操作"><a class="markdownIt-Anchor" href="#其他-qemu-模拟器的操作"></a> 其他 QEMU 模拟器的操作</h3>
<h4 id="连接-usb-设备"><a class="markdownIt-Anchor" href="#连接-usb-设备"></a> 连接 USB 设备</h4>
<p><font color=green>可以通过 -device 命令将 U 盘连接到模拟器</font>。<br />
如果要连接 <font color=green>USB 设备到 QEMU</font>，那么需要先查询 USB 设备的位置。我们输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsusb -t</span><br></pre></td></tr></table></figure>
<p>来查询 USB 设备的位置。看他的输出：<br />
<img src="https://img.gejiba.com/images/ab3efd6bffb37db1375536c2a68b8af8.png" alt="" /><br />
找到你要连接的 USB 的位置。我这里以<font color=green> 我的 U 盘(Disk 2.0)</font> 为例子。<br />
输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-device usb-ehci,<span class="built_in">id</span>=ehci</span><br><span class="line">-device usb-host,bus=ehci.0,hostbus=20,hostport=1</span><br></pre></td></tr></table></figure>
<p>其中，第一行的命令是指定虚拟的 USB 版本，我这里是 2.0。如果要虚拟 USB 3.0，请输入 <font color=green>xhci</font>。<br />
第二行的命令是<font color=green>定位 USB 设备的位置</font>，我的设备在 Bus 020，Port 1 的位置上，所以输入的bus=20 port=1。而 port 的位置就是<font color=green>指树根下的位置</font>。我是树根下的第 1 个位置，所以填 1。一定要根据自己实际情况填写。</p>
<h4 id="efi-固件的使用"><a class="markdownIt-Anchor" href="#efi-固件的使用"></a> EFI 固件的使用</h4>
<p>QEMU 是可以使用 UEFI 启动的，需要 EFI 固件。<br />
<font color=red>启动命令请查看 -pflash 命令。</font><br />
这里提供下载：<br />
<a href="/download/QEMU_EFI.fd">下载 QEMU_EFI.fd</a></p>
<h4 id="无界面引导"><a class="markdownIt-Anchor" href="#无界面引导"></a> 无界面引导</h4>
<p>有时候我们在模拟虚拟系统的时候需要直接将终端变成 QEMU 的控制台，那么我们加上 -nographic 命令即可。</p>
<h2 id="qemu-镜像下载"><a class="markdownIt-Anchor" href="#qemu-镜像下载"></a> QEMU 镜像下载</h2>
<p><a href="/images/">点击进入下载站</a></p>
</font><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>珊瑚宫心海养成指南</title>
    <url>/20220915/233651/</url>
    <content><![CDATA[<p><font  face="宋体">献给各位抽到心海的同学们~</font><br />
<font  face="宋体"><br />
<img src="https://img.gejiba.com/images/9b0eb764a0ac82311a641c0c879ec1ec.jpg" alt="" /><br />
<img src="https://img.gejiba.com/images/32d21d0e305c9d5a21a56fb8dc992737.gif" alt="" /></p>
<h2 id="圣遗物"><a class="markdownIt-Anchor" href="#圣遗物"></a> 圣遗物</h2>
<p>建议使用<font face="宋体" color=#9393FF><strong>海</font><font  face="宋体" color=#FF60AF>染</font><font face="宋体" color=#46A3FF>四件套</strong></font>。<br />
双爆<font face="宋体" color=red><strong>越少越好，不要堆双爆</strong></font>。</p>
<h3 id="词条"><a class="markdownIt-Anchor" href="#词条"></a> 词条</h3>
<p><font  face="宋体">生之花：<font face="宋体" color=red><strong>生命值</strong></font><br />
<img src="https://img.gejiba.com/images/07ad11abca89d87bd1ae38612e54cbe4.jpg" alt="" /><br />
死之羽：<font face="宋体" color=red><strong>攻击力</strong></font><br />
<img src="https://img.gejiba.com/images/ea4acec0d7fd5b0ff0bb789fb965d28e.jpg" alt="" /><br />
理之冠：<font color=red><strong>治疗加成</strong></font>（可以使用生命）<br />
<img src="https://img.gejiba.com/images/6865e4d0d785f80d26c9b51409787372.jpg" alt="" /><br />
时之沙：<font color=red><strong>生命值</strong></font><br />
<img src="https://img.gejiba.com/images/d7763d67dab5e0bc3a78c0f63c197824.jpg" alt="" /><br />
空之杯：<font color=red><strong>水元素伤害加成</strong></font><br />
<img src="https://img.gejiba.com/images/989b021bb7fa09b6cfa7cf591337f2dd.jpg" alt="" /><br />
</font></p>
<h2 id="武器"><a class="markdownIt-Anchor" href="#武器"></a> 武器</h2>
<p>使用<font face="宋体" color=#CA8EC2><strong>试作金铂</strong></font>即可。如果追求更高可以抽取<font color=#FFD306><strong>不灭月华</strong></font>。</p>
<h2 id="命座"><a class="markdownIt-Anchor" href="#命座"></a> 命座</h2>
<p>零命即可，一般没必要抽取命座。</p>
<h2 id="组队"><a class="markdownIt-Anchor" href="#组队"></a> 组队</h2>
<p>可以放进<b>“神鹤万心”</b>配合打永冻流：<br />
<font color=#FFD306><strong>神里绫华</strong></font>、<font color=#FFD306><strong>珊瑚宫心海</strong></font>、<font color=#FFD306><strong>申鹤</strong></font>、<font color=#FFD306><strong>枫原万叶</strong></font>。</p>
<p><font face="宋体">还有心海武装队：</font><br />
<font face="宋体" color=#FFD306><strong>珊瑚宫心海</strong></font>、<font face="宋体" color=#CA8EC2><strong>菲谢尔</strong></font>、<font face="宋体" color=#CA8EC2><strong>北斗</strong></font>、<font face="宋体" color=#CA8EC2><strong>行秋</strong></font>。<br />
<font face="宋体" color=red>心海武装队和砂糖武装队不一样的是，心海武装队可以随意搭配后三位角色。</font><br />
</font></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>朝鲜故事</title>
    <url>/20250115/134502/</url>
    <content><![CDATA[<h1 id="金哲的一生"><a class="markdownIt-Anchor" href="#金哲的一生"></a> 金哲的一生</h1>
<h3 id="重生与归途"><a class="markdownIt-Anchor" href="#重生与归途"></a> <strong>重生与归途</strong></h3>
<h4 id="逃离与新生"><a class="markdownIt-Anchor" href="#逃离与新生"></a> <strong>逃离与新生</strong></h4>
<p>金哲（化名）是一个普通的朝鲜农民，为了逃避贫困与压迫，他在三十多年前冒着生命危险横渡鸭绿江，逃亡到中国。在那里，他假借一名已故中国人的身份生活，靠着勤奋努力和语言天赋，逐渐扎根北京。</p>
<p>他成了一名装修工人，从最初的小工到后来独自接活儿，金哲攒下了一笔钱，买了房和车，还拿到了珍贵的北京车牌。他的生活看似幸福，平静而富足，但内心却始终留有一个深深的裂痕——对家人的思念。</p>
<h4 id="返乡的决心"><a class="markdownIt-Anchor" href="#返乡的决心"></a> <strong>返乡的决心</strong></h4>
<p>在某个冬日的清晨，金哲坐在家中的餐桌前，看着一张全家福的照片。他知道，家人在朝鲜的境况可能依然艰难，而自己却无法得知他们的任何消息。这种煎熬在二十年的时间里从未减弱，反而越来越深。他最终下定决心，要回到朝鲜，哪怕付出一切代价。</p>
<p>2009年6月的一个早晨，金哲带上简单的行李，登上了北京站发往平壤的K27次列车。他知道这是一次可能无法回头的旅程，但内心的思念战胜了恐惧。</p>
<h4 id="噩梦的开始"><a class="markdownIt-Anchor" href="#噩梦的开始"></a> <strong>噩梦的开始</strong></h4>
<p>当列车抵达新义州站时，金哲被朝鲜边防人员带走。他的假身份被迅速识破，并以“叛国罪”判处45年劳改。他被送往深山中的一个秘密矿场，日夜挖掘矿石，每天只有一分钟的休息时间，食物仅是冷水和少量玉米粥。</p>
<p>一年后，金哲因饥饿和劳累倒在矿井中，最终孤独地死去。他的家人在朝鲜的村庄里苦苦等待他的消息，但始终未能等到。悲痛之中，他们全家也因思念与绝望逐渐衰弱，最终相继离世。一个家庭就这样湮灭在历史的尘埃里。</p>
<h4 id="奇迹的出现"><a class="markdownIt-Anchor" href="#奇迹的出现"></a> <strong>奇迹的出现</strong></h4>
<p>金哲死后，他的灵魂漂浮在矿山上空。他仰望星空，泪流满面，向神明祈求：“若能再来一次，我愿用一切换取家人的幸福。”不知何故，神明听到了他的请求，时间奇迹般地回溯到他踏上K27次列车的那一刻。</p>
<p>这一次，金哲没有选择返乡。他用神秘的力量，暗中帮助家人成功逃离朝鲜，并将他们带到了中国。他们一家团聚在北京，在丰台区马家堡附近的一套三居室中开始了新的生活。家人重新体会到了团圆的温暖。</p>
<h4 id="工头的复仇"><a class="markdownIt-Anchor" href="#工头的复仇"></a> <strong>工头的复仇</strong></h4>
<p>矿山的工头得知金哲一家逃脱后怒不可遏。他动用了神秘的军队，越境来到中国，试图抓捕金哲。然而，当他们找到金哲家所在的马家堡东里小区时，却被早已埋伏在此的中国警察一举擒获。</p>
<p>中国政府迅速将工头及其部下遣返回国，而他们在朝鲜也因“任务失败”被判处52年劳改。在那同一个矿山里，他们像金哲一样，忍受着饥饿与折磨，最终在绝望中死去。</p>
<h4 id="幸福的尾声"><a class="markdownIt-Anchor" href="#幸福的尾声"></a> <strong>幸福的尾声</strong></h4>
<p>从此，金哲一家安居于北京，过上了平静而幸福的生活。他的孩子们进入了中国的学校学习，金哲和妻子经营着一家小餐馆，生活虽不奢华，却充满了笑声和温暖。</p>
<p>而在丰台区的天空下，金哲时常感叹命运的多舛和神明的恩赐。他珍惜每一天，发誓再也不会冒险，只为守护眼前这来之不易的幸福。</p>
<h1 id="李言成的脱北之路"><a class="markdownIt-Anchor" href="#李言成的脱北之路"></a> 李言成的脱北之路</h1>
<p>李言成曾是一名坚定的朝鲜公民，他始终相信自己的祖国是世界上最强大的国家。然而，命运的一次巧合彻底颠覆了他的信念。朋友送给他的一枚U盘，成了他人生的转折点。U盘中播放的画面展示了韩国的繁荣景象，那些真实的场景让他陷入了深深的震撼与反思。朝鲜的宣传与现实之间的巨大反差，让他感到失望与迷茫。他开始质疑国家的真实面貌，最终萌生了一个危险的念头——脱北。</p>
<h3 id="寒夜中的逃亡"><a class="markdownIt-Anchor" href="#寒夜中的逃亡"></a> <strong>寒夜中的逃亡</strong></h3>
<p>2009年11月8日晚11点，李言成登上了一辆通往中朝边境的汽车。这是一条充满未知和危险的路，但自由的渴望让他不再犹豫。11月9日凌晨1点，他抵达了冰冷的鸭绿江边。深冬的寒夜，刺骨的江水让他几乎窒息，但他依旧咬牙向对岸游去。然而，他的行动被朝鲜边防军发现。尽管边防军迅速上报上级并追击，他还是幸运地逃脱，成功抵达中国境内。</p>
<h3 id="初见中国的繁华"><a class="markdownIt-Anchor" href="#初见中国的繁华"></a> <strong>初见中国的繁华</strong></h3>
<p>在中国一侧，接应的人早已等候多时。他迅速登上车辆，驶离了边境地区。第二天清晨，车辆抵达沈阳。在这座陌生却繁华的城市，李言成第一次感受到真实的对比。他看到熙攘的街道和繁华的商场，眼泪不由自主地流了下来。他喃喃自语：“我的国家果真不是世界最强大的国家……”那一刻，痛苦与希望交织在他的心中。他吃到了一顿丰盛的饭菜，那份饱腹感是他在朝鲜几乎无法想象的。这短暂的幸福也提醒他，危险仍未远去。他知道，在中国，如果被发现为朝鲜脱北者，随时可能被遣返。</p>
<h3 id="漫长的火车旅程"><a class="markdownIt-Anchor" href="#漫长的火车旅程"></a> <strong>漫长的火车旅程</strong></h3>
<p>第二天，蛇头安排了从沈阳到昆明的火车票。幸运的是，当时中国的铁路还未实行实名制，这让他们能够顺利登车。蛇头叮嘱他们，“全程不能说话，不能露出惊慌；查票时装睡，一切问题我来解决。”李言成听后点头如捣蒜，但内心依旧忐忑不安。</p>
<p>途中，一声“查票了！”让他惊得猛地坐起。这一动作立刻引起列车员的注意。蛇头机智地解释，“他做噩梦吓醒了。”列车员要求查票，蛇头从容地递上所有人的车票，才让他们化险为夷。接下来的40多个小时，李言成目睹了中国沿途的风景，看到许多人幸福的生活。这让他震撼之余，感到更加坚定：自己必须逃离朝鲜，去迎接自由的生活。</p>
<h3 id="翻山越岭的生死攸关"><a class="markdownIt-Anchor" href="#翻山越岭的生死攸关"></a> <strong>翻山越岭的生死攸关</strong></h3>
<p>火车抵达昆明后，蛇头迅速安排车辆将他们送往边境。由于没有护照和身份证，他们只能偷渡。翻越崇山峻岭，穿越森林与小路，旅程的每一步都充满危险与艰难。他们的体力几乎耗尽，但最终成功抵达老挝。随后，他们辗转进入缅甸，再搭乘大客车前往泰国。在泰国，李言成终于获得庇护，并通过韩国方面的援助，安全抵达韩国。</p>
<h3 id="新生活的开始"><a class="markdownIt-Anchor" href="#新生活的开始"></a> <strong>新生活的开始</strong></h3>
<p>站在韩国的土地上，李言成喜极而泣，感到如释重负。他紧紧拥抱蛇头，感谢对方的帮助，这是他们最后一次见面。此后，李言成在韩国安定了下来。他找到了一份普通的工作，过上了平凡但安稳的生活。对他来说，这种平凡已经是幸福的极致。他感慨道：“我终于摆脱了苦海，虽然这里的生活并不奢华，但比朝鲜好太多了。”</p>
<p>李言成的脱北之路充满了艰险和挑战，但自由的追求让他始终不放弃。这段经历不仅是他个人的救赎，也是对人性尊严的坚持与渴望。</p>
<h1 id="李言成的脱北之路后续"><a class="markdownIt-Anchor" href="#李言成的脱北之路后续"></a> 李言成的脱北之路后续</h1>
<p>2013年5月5日，原本在韩国安稳生活的李言成感到一阵不安。他的直觉是对的，那天中午，他接到了来自某人的消息：“你的家人被朝鲜抓了。他们要求你回去，否则就杀你全家。”这个晴天霹雳彻底摧毁了李言成苦心经营的美好生活。他崩溃了，痛哭不止：为何自己追求自由，代价却是家人承受苦难？</p>
<p>几经挣扎，李言成做出了艰难的决定。他辞掉了韩国的工作，收拾行囊，再次踏上了返回朝鲜的路。这条路不仅是肉体上的归途，更是他自由梦的终结。</p>
<h3 id="回归后的灰白世界"><a class="markdownIt-Anchor" href="#回归后的灰白世界"></a> <strong>回归后的灰白世界</strong></h3>
<p>回到朝鲜，迎接李言成的是铺天盖地的指责与冷漠。他被迅速安排接受审判，面对摄像机，他被迫宣称：“我在韩国过得一点也不好！每天都想死的感觉。”这些话违背了他的真实情感，却是保命的唯一选择。朝鲜方面认为他仍然忠诚，劳改了几个月后便将他释放。</p>
<p>然而，李言成再也无法离开朝鲜了。他的生活从此陷入了痛苦与绝望。每天，他只能享受短短3小时的电力供应，饮水需要亲自到江边取，冬天则在缺乏暖气的房间里苦熬，几乎每年都濒临冻死。他无数次跪下，悔恨当初的选择。但后悔已无济于事，铁幕之下，他再也看不到自由的希望。</p>
<p>2019年6月，一位朋友告诉他：“中国现在买火车票需要身份证和护照了。”这句话如同最后一根稻草，让李言成再次失声痛哭。他知道，通往外界的道路已经彻底堵死。</p>
<h3 id="偶然的曙光"><a class="markdownIt-Anchor" href="#偶然的曙光"></a> <strong>偶然的曙光</strong></h3>
<p>2020年疫情爆发后，朝鲜进一步封锁国境，李言成的世界变得更加渺茫。然而，命运总是充满反复。因为他“悔改表现良好”，金正恩将军决定奖励他——派遣他到中国的朝鲜餐厅工作和学习。得知这一消息时，李言成灰暗的生活似乎再次被点亮了。</p>
<p>2025年，李言成如愿来到中国，在丹东的一家朝鲜餐厅当厨师。再次踏上这片土地时，他感叹：“中国变化真大！而我们的朝鲜……也算是一年比一年好了吧，起码没倒退。”</p>
<h3 id="短暂的幸福"><a class="markdownIt-Anchor" href="#短暂的幸福"></a> <strong>短暂的幸福</strong></h3>
<p>在丹东的日子里，李言成尽情享受着中国的便利与富足。虽然时间只有短短三年，但这三年对他而言是无价的。每天，他在餐厅里工作，尽管是简单的厨师岗位，却足以让他感到满足。最重要的是，在这里，他再也不用担心挨饿。</p>
<p>虽然李言成深知，这段生活只是短暂的喘息，他最终还要回到朝鲜，但他依然感恩上帝赐予的这一段希望。他珍惜每一天，努力为餐厅的客人做出最美味的菜肴。</p>
<p>在餐厅忙碌的厨房里，李言成时常望着窗外熙熙攘攘的街景，喃喃自语：“这三年，已经是我命运中最好的恩赐了。”他坚信，即便命运无情，但只要有一丝光亮，就值得他去追逐与珍惜。</p>
<p>标题：李言成的脱北之路后续<br />
在韩国呆了四五年后，朝鲜方面把他的家人都逮捕了起来，并且使用各种手段想要把他绑架回朝鲜。在2013年5月5日中午，李言成感到阵阵不安。突然有个人来找他，说：你家里人被朝鲜绑架了，你不回去朝鲜他们就杀你全家。李言成哭了，他来之不易的美好生活就要结束了？他的家人那么惨。为什么自己逃脱别人要受罚。他实在受不了自己的家人被如此欺负，为了家人的安全，他辞掉了韩国的工作还是回到了朝鲜。回到朝鲜后，他的世界变成灰白色了。心情低落的接受朝鲜的采访和审判。他在朝鲜的电视里出镜了。他的精神十分空虚，他被迫说“我在韩国过得一点也不好！每天都想死的感觉”。朝鲜方面觉得他还是比较忠诚的，劳改了几个月就把它放了。李言成不知道的是，他这一回来，就再也出不去了。2019年6月7日，李言成的朋友跟他说“喂！你知道吗？中国现在买火车票得用身份证护照了。不能用票了”“什么？！！”，李言成再一次痛哭。虽然内心早就麻木了但是听见这种事还是很伤心，这下应该是再也出不去朝鲜了。他很难过。他在朝鲜的生活很痛苦，每天只有3个小时电力支持。水也是得去江边打水，而且房间也没有暖气，每年冬天都差点被冻死。他跪下了。他这么多年来一直很后悔当年为什么要回来。但是后悔也没有用了，他回不去向往的世界了。2020年，因为疫情，朝鲜封了海关。出去的希望更加渺茫。但是，就是这么巧。因为他在外面表现的很好，将军奖励他出国学习去朝鲜餐厅，他灰色的世界突然有了颜色！他开心的蹦了起来。这次，他回到了中国。在丹东的一家朝鲜餐厅里当厨师。“这么多年没去中国了，中国变化很大嘛。而我们的朝鲜。。。也算是一年比一年好了吧！起码没倒退唉”他感叹道。虽然这次他在中国的时间只有3年，但是这3年就是上帝给他的又一次希望，现在他在朝鲜餐厅里每天都快乐的活着。因为在中国，他起码饿不死了。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>无需 U 盘给 MacBook 电脑安装 Arch Linux</title>
    <url>/20230108/134420/</url>
    <content><![CDATA[<p>想装Arch Linux却没有带U盘，心急如焚的话，就看看我这个教程吧！保有效。</p>
<h1 id="安装要求"><a class="markdownIt-Anchor" href="#安装要求"></a> 安装要求</h1>
<ul>
<li>一双手</li>
<li>灵慧的大脑</li>
<li>一台 (Intel 芯片) 的 MacBook Air 或者 MacBook Pro。 (不知道带安全芯片的可不可以)</li>
</ul>
<h1 id="开始安装"><a class="markdownIt-Anchor" href="#开始安装"></a> 开始安装</h1>
<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>首先你需要有 Linux 基础，不然我之后跟你讲的，你都听不懂。<br />
其次需要备份数据，因为我们要全盘格式化。</p>
<h2 id="下载-arch-linux"><a class="markdownIt-Anchor" href="#下载-arch-linux"></a> 下载 Arch Linux</h2>
<p>您可以通过以下链接来下载：<a href="https://mirrors.bfsu.edu.cn/archlinux/iso/latest/archlinux-x86_64.iso">点击下载</a></p>
<h2 id="macos-下的操作"><a class="markdownIt-Anchor" href="#macos-下的操作"></a> macOS 下的操作</h2>
<h3 id="分区"><a class="markdownIt-Anchor" href="#分区"></a> 分区</h3>
<ul>
<li>在确定好已经备份好了文件之后，我们打开“磁盘工具”<br />
<img src="https://img.gejiba.com/images/307403f27e39b88ad31f7034e3e6f3ca.png" alt="" /></li>
<li>然后在上面的“显示”选项中，选择：“显示所有设备”<br />
<img src="https://img.gejiba.com/images/10a4685ab86b81d9dfa2b4c032f1c707.png" alt="" /></li>
<li>然后点击整块盘，找到“分区”选项。<br />
<img src="https://img.gejiba.com/images/80d7dc7a41780488c98874460b234c5d.png" alt="" /></li>
<li>添加一块 4 GB 的分区，分区格式 FAT 即可，名称先随意改一下，后面还需要改名字。<br />
<img src="https://img.gejiba.com/images/265334b0ee5aad473c7de1f498b0f723.png" alt="" /></li>
</ul>
<h3 id="安装虚拟机"><a class="markdownIt-Anchor" href="#安装虚拟机"></a> 安装虚拟机</h3>
<ul>
<li>添加好之后，我们安装 VMware Fusion 虚拟机，安装一个 Windows 系统。<br />
(如果你有 Parallels Desktop 虚拟机，可以跳过这一步)<br />
VMware Fusion 虚拟机下载链接：<a href="https://download3.vmware.com/software/fusion/file/VMware-Fusion-12.0.0-16880131.dmg">点我下载</a><br />
VMware Fusion 虚拟机破解密钥：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br></pre></td></tr></table></figure>
<p>如果找不到 Windows 镜像的话，可以用我这个 Windows XP：<a href="https://pan.huang1111.cn/s/KBgZsY">点我下载</a></p>
<ul>
<li>安装好虚拟机和虚拟机扩展套件(例如：VMware Tools)之后，共享你那个 4 GB 的分区到虚拟机上。</li>
</ul>
<h4 id="vmware-fusion"><a class="markdownIt-Anchor" href="#vmware-fusion"></a> VMware Fusion</h4>
<p>在菜单栏中找到“虚拟机”选项，然后拉到最后有一个“共享”，点那个共享设置。<br />
<img src="https://img.gejiba.com/images/6ea78bdea57adb61727bc59cc2fb97fe.png" alt="" /><br />
点击启用共享文件夹，然后点击那个”+“号。<br />
<img src="https://img.gejiba.com/images/632ccbf19ea918679c36351e75d324d0.png" alt="" /><br />
找到那个 4 GB 的分区，点击“添加”<br />
<img src="https://img.gejiba.com/images/b397da48952fba48c994214f4e12b6e0.png" alt="" /><br />
<img src="https://img.gejiba.com/images/3cb6087a20bce76a8bc4a793218eb333.png" alt="" /></p>
<h4 id="parallels-desktop"><a class="markdownIt-Anchor" href="#parallels-desktop"></a> Parallels Desktop</h4>
<p>在菜单栏中找到“设备”选项，找到“共享”，点：添加文件夹。<br />
<img src="https://img.gejiba.com/images/bd405cf58579076c9fa6508614cc58bc.png" alt="" /><br />
找到那个 4 GB 的分区，点击“打开”<br />
<img src="https://img.gejiba.com/images/d39aed7bf6269001f2dfcfe784a018c0.png" alt="" /></p>
<h3 id="拷贝镜像到分区"><a class="markdownIt-Anchor" href="#拷贝镜像到分区"></a> 拷贝镜像到分区</h3>
<ul>
<li>这一步就非常简单了，只需要将ARCH Linux光盘文件拷贝到分区即可，这也就是为什么要装一个 Windows 虚拟机的原因，因为 macOS 不能识别 Arch Linux 的文件。</li>
<li>虚拟机插入Arch Linux光盘，然后将光盘所有文件全部复制到那个分区。<br />
<img src="https://img.gejiba.com/images/3853d5b817845a45de0a1daf8acf9cc9.png" alt="" /></li>
</ul>
<h3 id="再次更改名字"><a class="markdownIt-Anchor" href="#再次更改名字"></a> 再次更改名字</h3>
<ul>
<li>记住虚拟机中显示的 Arch Linux 光盘名称，我这里是<b><font color=red>「ARCH_202301」</font></b>，再次进入“磁盘工具”。<br />
然后点击 4 GB 的分区，再点击一下他的名字：<br />
<img src="https://img.gejiba.com/images/dc5319ee01c52ced07a08a2d49b3f9c5.png" alt="" /><br />
将这个分区名称改成ARCH_202301之后，macOS的所有操作就都完成了。</li>
</ul>
<h2 id="开始安装-arch-linux"><a class="markdownIt-Anchor" href="#开始安装-arch-linux"></a> 开始安装 Arch Linux</h2>
<p>重新启动你的 Mac 电脑，按下 Option 键，等看到启动选项出现 EFI Boot 之后，引导它。如果顺利的话，你应该可以看到 GRUB 界面，开始引导即可。<br />
<img src="https://img.gejiba.com/images/d5d322d4fb129852c7d8365791828811.jpg" alt="" /></p>
<h3 id="连接互联网"><a class="markdownIt-Anchor" href="#连接互联网"></a> 连接互联网</h3>
<p>输入 iwctl 进入 iwd。<br />
然后查看网卡号是什么，以 wlan0 为例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">device list</span><br></pre></td></tr></table></figure>
<p>然后联网，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">station wlan0 scan</span><br><span class="line">station wlan0 get-networks</span><br><span class="line">station wlan0 connect TestWiFi_5G</span><br></pre></td></tr></table></figure>
<p>连接好网络后，输入 exit 退出 iwd。再输入 ping <a href="http://www.baidu.com">www.baidu.com</a> 看看网络是不是正确连接。</p>
<h3 id="为磁盘分区"><a class="markdownIt-Anchor" href="#为磁盘分区"></a> 为磁盘分区</h3>
<p>未完待续。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>白洋淀公交乘坐体验</title>
    <url>/20220821/011817/</url>
    <content><![CDATA[<h1 id="线路走向"><a class="markdownIt-Anchor" href="#线路走向"></a> 线路走向</h1>
<p>2022 年 8 月 20 日，沧州市任丘市新开到白洋淀李广村<font color=red>（现归雄安新区保定市雄县管辖）</font>的公交：308 路。以下是线路走向。</p>
<h3 id="308-路-代河枢纽站-李广村"><a class="markdownIt-Anchor" href="#308-路-代河枢纽站-李广村"></a> 308 路 代河枢纽站 - 李广村</h3>
<p><font color=green>代河枢纽站-西黄垒村西-于村路口<font color=red>(106国道)</font>-杜家营村-前塔村-后塔村-鄚州镇政府-鄚州镇中心卫生院-南阁村-东七里庄-中七里庄-西七里庄-生紫码头-大口子码头-李广村南-李广村</font><br />
<img src="https://img.gejiba.com/images/03eb9f97595c40fdcc4b32a1dd089d9b.png" alt="" /></p>
<h1 id="乘车日志"><a class="markdownIt-Anchor" href="#乘车日志"></a> 乘车日志</h1>
<p>20号下午一点半从市区乘坐202路公交（任丘市客运西站-代河枢纽站）到达北代河。<br />
<img src="https://img.gejiba.com/images/0b4afc34f40d79694614063114824073.jpg" alt="" /><br />
小歇息后。一点四十308路开始行走。车内座子还是很新的，支持刷卡和刷码。<br />
<img src="https://img.gejiba.com/images/caabb0a863887deefa35a70dcdfde4b2.jpg" alt="" /><br />
今天天空很好看啊…<br />
车子运行还是很快的，最高速度大概 40 km/h。噪音蛮大的。<br />
过了于村路口就基本出了任丘界了，驶入鄚州镇。<br />
<img src="https://img.gejiba.com/images/4c294fd8d37c149493ac12bb8e4efb89.jpg" alt="" /><br />
驾驶到千里堤路的时候，就可以看到白洋淀的河流了。<br />
这里有几个旅游码头，308路基本都设置了站点。<br />
人还挺多的，比较热闹。<br />
然后就到了李广村，本车的终点站。<br />
<img src="https://img.gejiba.com/images/38e1a10c805be98b163dad05b4c93ab9.jpg" alt="" /><br />
李广村离白洋淀河流还算是挺近的，我在这里拍了一些照片。<br />
<img src="https://img.gejiba.com/images/3fc817b205738ced7dd3ce1e378a5447.jpg" alt="" /><br />
<img src="https://img.gejiba.com/images/bd0f431dfabddf5fd30d250932523d59.jpg" alt="" /><br />
<img src="https://img.gejiba.com/images/b1b5d6fb64e809b6c4b3acc160c97807.png" alt="李广村在白洋淀的位置" /><br />
在近距离观察时，录了一小段视频。<font color=red></font><br />
<a href="https://steve372yeyeye.github.io/20220821/011817/480p.mov">点击播放 QuickTime 视频</a></p>
<h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1>
<p>白洋淀环境很好，即使是在不是景区的乡村小河，也是很美丽的。<br />
有一种很自然很清新的感觉。如果是清晨应该会更有感觉。</p>
<h1 id="经过码头"><a class="markdownIt-Anchor" href="#经过码头"></a> 经过码头</h1>
<p>308 路在路途中会经过<font color=green>生紫码头</font>和<font color=green>大口子码头</font>。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>计算机基础操作</title>
    <url>/20220910/083627/</url>
    <content><![CDATA[<p>为了让各位用户都能会用 Windows，特此写下该教程。<br />
Windows 是微软公司于 1985 年发布的电脑操作系统，最新版是 Windows 11(2021 年发布)。<br />
这里我们都以<font color=#66CCF> Windows 8.1 With Update</font> 版本为例子。<br />
<font face="宋体"></p>
<h1 id="认识界面"><a class="markdownIt-Anchor" href="#认识界面"></a> 认识界面</h1>
<p>Windows 8.1 的主界面长这样：<br />
<img src="https://img.gejiba.com/images/1652f5ddeefb13492b6f1f4ed881a635.png" alt="" /><br />
点击“开始按钮”后，出现以下界面：<br />
<img src="https://img.gejiba.com/images/2caaee3f09a6e7e296efa2521203587e.png" alt="" /><br />
可以看到很多功能。这就是 Windows 8 新增的磁贴界面。<br />
我们点击网络图标，可以列出电脑下的所有网络。<br />
<img src="https://img.gejiba.com/images/70c8e2328d4c6b79ed980dd38b6fe285.png" alt="" /><br />
台式机我们都用有线网络，也就是插上网线后使用网络。如果需要连接 Wi-Fi，请加装无线网卡。然后点击网络图标，输入您家网络密码即可。<br />
点击声音图标，可以调节计算机的声音。<br />
<img src="https://img.gejiba.com/images/c1d3edde8d66572bd8e3119b58d2885e.png" alt="" /><br />
也可以识别到计算机使用什么输出的声音。我这里是有线耳机所以识别到耳机。<br />
打开“这台电脑”可以查阅到电脑的所有文件夹。<br />
<img src="https://img.gejiba.com/images/ea386a6e79ccfdcf2e6904ded66596b7.png" alt="" /><br />
如果要添加 FTP 或者 SAMBA 连接，请右键点击“添加一个网络位置”。<br />
<img src="https://img.gejiba.com/images/e5e354b6eb7d798c69375f878a0c0ad8.png" alt="" /><br />
您也可以通过“这台电脑”为磁盘加密、格式化、和复制整块盘。<br />
<img src="https://img.gejiba.com/images/f2b3507bb9fdad1a945c9b7ff7cf5292.png" alt="" /><br />
如果是移动硬盘、U 盘等设备，也可以手动打开“自动播放”，如图：<br />
<img src="https://img.gejiba.com/images/5d5310518f51aa984ea5a1bc74a9f487.png" alt="" /><br />
<img src="https://img.gejiba.com/images/ef3f92b34135e76276dea95e5416d3a6.png" alt="" /></p>
<h1 id="鼠标操作"><a class="markdownIt-Anchor" href="#鼠标操作"></a> 鼠标操作</h1>
<p>鼠标分为左键、中键和右键。您需要根据软件的操作控制鼠标。<br />
<img src="https://img.gejiba.com/images/24ae58dad5ca57dd325db98300f18090.png" alt="" /></p>
<h1 id="键盘操作"><a class="markdownIt-Anchor" href="#键盘操作"></a> 键盘操作</h1>
<h2 id="普通-pc"><a class="markdownIt-Anchor" href="#普通-pc"></a> 普通 PC</h2>
<p>Windows 也十分依赖键盘。键盘长这样：<br />
<img src="https://img.gejiba.com/images/e94205463ae97810d7fdaf409a93fd61.png" alt="" /></p>
<h3 id="ctrl-键"><a class="markdownIt-Anchor" href="#ctrl-键"></a> Ctrl 键</h3>
<p>Ctrl 键就是控制键(Control)，用于控制 Windows 及程序的各种操作。</p>
<h3 id="alt-键"><a class="markdownIt-Anchor" href="#alt-键"></a> Alt 键</h3>
<p>Alt 键是更换(Alternate)的意思，点击 Alt + Tab 键后可以在打开的项目之间切换。</p>
<h3 id="shift-键"><a class="markdownIt-Anchor" href="#shift-键"></a> Shift 键</h3>
<p>而 Shift 键是上档转换键。常用于输入法中英文转换。</p>
<h3 id="enter-键"><a class="markdownIt-Anchor" href="#enter-键"></a> Enter 键</h3>
<p>Enter 键是回车键。在各个软件的功能都不一样，例如，在 Microsoft Word 中会换行，而在腾讯 QQ 中会发送消息。</p>
<h3 id="windows-键"><a class="markdownIt-Anchor" href="#windows-键"></a> Windows 键</h3>
<p>那个 Windows 徽标按键就是 Windows 键。在 Windows Vista 之前的系统（例如 Windows XP）中，Windows 键的功能不多。直到 Windows Vista 之后才开始增加新的内容。比如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows+数字1、2、3、4、5、6、7、8、9、0 分别打开你的任务栏上面的快捷启动栏上面的第一个到第十个图标所对应的快捷方式。</span><br><span class="line">Windows+D 最小化所有窗口，再按一次恢复所有窗口</span><br><span class="line">Windows+E 开启资源管理器(频繁按会资源占尽而死机)</span><br><span class="line">Windows+F 打开搜索窗口</span><br><span class="line">Windows+G 多次按下就会依次切换侧边栏上面的小工具(Gadgets)</span><br><span class="line">Windows+L 锁定当前计算机用户</span><br><span class="line">Windows+R 开启运行对话框 (非常常用)</span><br><span class="line">Windows+T 激活当前任务栏上面的窗口，多次按下会依次定位到下一个窗体</span><br><span class="line">Windows+T Shift 反方向定位</span><br><span class="line">Windows+U 开启辅助工具管理器</span><br><span class="line">Windows+X 开启Windows移动中心</span><br><span class="line">Windows+TAB 开启 Flip 3D窗口切换</span><br><span class="line">Windows+TAB Ctrl 用键盘控制 Flip 3D窗口切换</span><br><span class="line">Windows+Break(就是Pause——Break键) 开启Windows Vista系统属性窗口</span><br></pre></td></tr></table></figure>
<h3 id="backspace-键"><a class="markdownIt-Anchor" href="#backspace-键"></a> Backspace 键</h3>
<p>Backspace 键即退格键，相当于您手机的这个按钮：<br />
<img src="https://img.gejiba.com/images/c8f0d055e9dfc465b17d0ce2ee45bc36.png" alt="" /></p>
<h2 id="苹果电脑mac"><a class="markdownIt-Anchor" href="#苹果电脑mac"></a> 苹果电脑（Mac）</h2>
<p>因为 Mac 机生来就是为了 macOS 服务，所以键位略有不同。<br />
<img src="https://img.gejiba.com/images/740924cf74818fe307c4021b64d92673.png" alt="" /><br />
以下是 Mac 键盘映射到 Windows 的位置。</p>
<h3 id="option-键"><a class="markdownIt-Anchor" href="#option-键"></a> Option 键</h3>
<p>映射在 Windows 下的 Alt 键</p>
<h3 id="control-键"><a class="markdownIt-Anchor" href="#control-键"></a> Control 键</h3>
<p>映射在 Windows 下的 Ctrl 键</p>
<h3 id="command-键"><a class="markdownIt-Anchor" href="#command-键"></a> Command 键</h3>
<p>映射在 Windows 下的 Windows 键</p>
<h3 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h3>
<p>因为 Mac 部分操作由 Command 键来完成，如果你用 macOS 习惯了，重装 Windows 后会很不适应。</p>
<h1 id="上网"><a class="markdownIt-Anchor" href="#上网"></a> 上网</h1>
<h2 id="连接到网络"><a class="markdownIt-Anchor" href="#连接到网络"></a> 连接到网络。</h2>
<p>由上面的消息可得知，我们点击“网络”图标即可查看电脑是否联网。<br />
但是，我们如果没有安装 Wi-Fi 网卡，那么该如何上网？</p>
<h3 id="有线上网方法"><a class="markdownIt-Anchor" href="#有线上网方法"></a> 有线上网方法</h3>
<p>首先，请自备一个<font color=#66CCF>网线</font>，将网线的一个端插入电脑设备。然后打开电脑控制面板。打开“网络与共享中心”<br />
<img src="https://img.gejiba.com/images/61f075931cb8ac26067cbfd567ad7f85.png" alt="" /><br />
然后点击“设置新的连接或网络”<br />
<img src="https://img.gejiba.com/images/a61d6294782fe99c3738d669ac0877ca.png" alt="" /><br />
然后在新弹出的网络窗口中，直接下一步。<br />
<img src="https://img.gejiba.com/images/67ea71e690e2aae356299499cacc4733.png" alt="" /><br />
这里因为我连接上 互联网 了，所以提示这个，请点击设置新连接。<br />
<img src="https://img.gejiba.com/images/fe1bda33d3929b53bbf7952a0c981385.png" alt="" /><br />
然后点击宽带上网(PPPoE)<br />
<img src="https://img.gejiba.com/images/23bb454358d7a97eb544ca86fa3165c3.png" alt="" /><br />
然后输入你<font color=#66CCF> ISP </font>提供给你的用户名和密码，点击“连接”。<br />
<img src="https://img.gejiba.com/images/70131c1f06e051214b7959d817184584.png" alt="" /><br />
待等连接完成即可。<br />
也可以稍后输入用户名和密码。<br />
<img src="https://img.gejiba.com/images/8fc4e5f052bbe3a16fdd76b144b2685c.png" alt="" /><br />
<font color=red>注意：如果是新安装的 Windows 8.1 或 Windows 7 ，他一般不会配备某些设备的以太网卡，所以有线网也无法使用。这时需要安装驱动软件。</font><br />
如果需要查看您设备是否存在以太网卡，请查阅任务管理器。<br />
<img src="https://img.gejiba.com/images/04429d53596fb0e3743180f48887993d.png" alt="" /></p>
<h3 id="连接无线网"><a class="markdownIt-Anchor" href="#连接无线网"></a> 连接无线网。</h3>
<p>如果您电脑已经有无线网卡了，请确保安装好驱动软件，然后直接点击网络按钮，找到您家 Wi-Fi 网络即可。<br />
<img src="https://img.gejiba.com/images/9f62ae7d15014e89b9e38146d2e332f9.png" alt="" /></p>
<h2 id="上网浏览器更换"><a class="markdownIt-Anchor" href="#上网浏览器更换"></a> 上网浏览器更换</h2>
<p>Windows 10 之前的系统只自带一个上网浏览器，名叫 Internet Explorer，这个浏览器已经淘汰了，需要更换。<br />
请确保连接好网络后，打开 Internet Explorer，输入 Firefox，来更换浏览器。当然您更换其他浏览器也是可以的，我推荐换成 Edge。<br />
<img src="https://img.gejiba.com/images/9fc535345f9c88ded9db35eb3ab9f122.png" alt="" /><br />
<img src="https://img.gejiba.com/images/57c44802582c9ffdfa7a3b363eba1fef.png" alt="" /><br />
点击下载 Firefox 来安装 Firefox。<br />
<img src="https://img.gejiba.com/images/363e5121033dbfc948671cd6c01697c0.png" alt="" /></p>
<h1 id="安装软件"><a class="markdownIt-Anchor" href="#安装软件"></a> 安装软件</h1>
<h2 id="上网查找软件"><a class="markdownIt-Anchor" href="#上网查找软件"></a> 上网查找软件</h2>
<p>直接使用上网浏览器搜索你要安装的软件即可。<br />
<img src="https://img.gejiba.com/images/43f8eeb19effa9d2f91add83168c7c86.png" alt="" /><br />
<font color=red>注意！在网上下载的软件鱼龙混杂，非常容易被捆绑，中病毒。</font><br />
如果要下载微软 Office 软件，建议使用 MSDN I Tell You 网站。<a href="https://msdn.itellyou.cn">点击进入网站</a><br />
<img src="https://img.gejiba.com/images/a6ed168084e06062d4a263d87a7b39ab.png" alt="" /><br />
<img src="https://img.gejiba.com/images/06a5200304903229bb2b38a2c96ee140.png" alt="" /><br />
<img src="https://img.gejiba.com/images/e83b3760a52fd32e20896c4808c0bb03.png" alt="" /></p>
<h2 id="软件管家安装软件"><a class="markdownIt-Anchor" href="#软件管家安装软件"></a> 软件管家安装软件</h2>
<p>使用上网浏览器先安装<font color=#66CCF> 360 软件管家</font>，然后在软件管家搜索你要安装的软件。</p>
<h1 id="管理您计算机上的文件"><a class="markdownIt-Anchor" href="#管理您计算机上的文件"></a> 管理您计算机上的文件</h1>
<p>如果需要管理器您计算机上的软件，请点击“这台电脑”。随便点进一个盘。<br />
<img src="https://img.gejiba.com/images/ad0a02ed187c07c21ea51d40eb14b5fc.png" alt="" /><br />
这里列出了这盘上面的所有内容。<br />
如果要复制一个文件，请在要复制的文件旁点击鼠标右键，然后点击“复制©”。<br />
<img src="https://img.gejiba.com/images/4f205db2d4061a45f27c59dd28a4027c.png" alt="" /><br />
然后前往要复制到的文件夹，然后右键点击“粘贴(P)”。<br />
<img src="https://img.gejiba.com/images/ea444b06cac589002a3da8bebde66591.png" alt="" /><br />
这样，文件就复制好了。<br />
我们只需要移动文件的时候点击“剪切(T)”即可。</p>
<h1 id="卸载软件"><a class="markdownIt-Anchor" href="#卸载软件"></a> 卸载软件</h1>
<p>有时候我们不想要一些软件，这时可以卸载软件。<br />
打开 控制面板，然后找到 <font color=#66CCF>程序与功能</font><br />
<img src="https://img.gejiba.com/images/403509da174a2c1c63628db60d205ad3.png" alt="" /><br />
然后，双击要卸载的软件，跟着软件走即可。<br />
<img src="https://img.gejiba.com/images/2f06c1f1ee32d3752ed1876222740794.png" alt="" /><br />
<img src="https://img.gejiba.com/images/20196f123882172b4f12a00d39411252.png" alt="" /></p>
<h1 id="命令提示符"><a class="markdownIt-Anchor" href="#命令提示符"></a> 命令提示符</h1>
<p><font color=red>注意！专业人士使用。</font><br />
Windows 中的终端叫做命令提示符，我们可以利用终端做很多事情。请先按下 Windows+R 键然后输入 cmd。<br />
<img src="https://img.gejiba.com/images/8ec9d0d197ae975dc233a799032b0a5a.png" alt="" /><br />
然后会打开一个黑色命令窗口，我们在此输入命令即可。比如我要查看系统版本，输入：<br />
<img src="https://img.gejiba.com/images/19587c4ac59a01e5359fb3584f29e211.png" alt="" /><br />
就可以查看了。要清屏可以输入 cls。<br />
</font></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>让 Mac 电脑也玩上光遇！</title>
    <url>/20250114/222842/</url>
    <content><![CDATA[<h1 id="安装光-遇国服"><a class="markdownIt-Anchor" href="#安装光-遇国服"></a> 安装光 · 遇国服</h1>
<p>by Sanakaprix  2025-01-15</p>
<h2 id="处理器是-apple-m1-及以后的设备"><a class="markdownIt-Anchor" href="#处理器是-apple-m1-及以后的设备"></a> 处理器是 Apple M1 及以后的设备</h2>
<h3 id="下载-ipa"><a class="markdownIt-Anchor" href="#下载-ipa"></a> 下载 iPA</h3>
<p>在下载之前，请先在设置-“隐私与安全性”-“允许以下位置的应用程序”单选框改成 App Store 和被认可的开发者：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/9d5b41323a439c1502256f7de10db681.png" alt="" /><br />
设置完成后在浏览器打开 <a href="https://decrypt.day">https://decrypt.day</a> 这个网站：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/de2ef63f5bd4e3cdd79a3f7293c9a232.png" alt="" /><br />
搜索“光·遇”：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/abf2c34dd4763f78cedcb30a61a4485e.png" alt="" /><br />
点击下载：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/b952b53dac09245f881459db710c0ee3.jpg" alt="" /><br />
点击第二个链接（OneDrive 下载）：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/6ce7063a25f4cd3e9da30225057c14a0.png" alt="" /><br />
获取下载链接后下载，等待下载完成：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/545ebabe4d167a12de63a32c4236a733.png" alt="" /></p>
<h3 id="安装光-遇"><a class="markdownIt-Anchor" href="#安装光-遇"></a> 安装《光 · 遇》</h3>
<p>下载完成后，前往 <a href="http://playcover.io">playcover.io</a> 网站，点击下载按钮：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/b1bfce3f81bbc7311ad3fb615e32c300.png" alt="" /><br />
选择 Latest 版本，然后安装 PlayCover 程序：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/94cd8e9506f3d74f90fe0195a7e92bc2.png" alt="" /><br />
第一次打开软件应该是空空如也的状态（我这里已经安装了）：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/a767dbe45b2bf5d59438e93e67953cb0.png" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/a2bdd984ff903a125f2dad32e328fed5.jpg" alt="" /><br />
右键打开光遇设置，然后一定要完全按照我这样设置，不然可能闪退：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/fa1e53cf02b1aeb12f4b63b8e4c68a65.jpg" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/172eaddd8b6fd55deeba06b1546c8fbf.png" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/ba86111ffa85ba0c2ae1c6e7c3c80c39.jpg" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/e024e949577b5e91c0c95534bcd08425.png" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/aba5f5da790f25394b3ab865aa460e49.jpg" alt="" /><br />
改好了之后，点击“好”，双击图标启动游戏试一下。<br />
如果还闪退的话，可以试试以下方法：<br />
按下 ⌘ Command + 空格键，输入 Terminal 打开终端：<br />
输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo codesign --force --deep --sign - </span><br></pre></td></tr></table></figure>
<p>然后在 PlayCover 里右键选择“在 Finder 里查看”：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/82973f85fa93751e7259d00b8157c9e7.jpg" alt="" /><br />
然后将光遇的包体拖到终端里，就像这样：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/d1397b3de877b044752b45d3804733a6.jpg" alt="" /><br />
按下回车键执行，输入你电脑用户的密码（密码不显示盲敲就行）：<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/d01879b77daaeb0e6b797f695f89b881.png" alt="" /><br />
等待执行完成后，再打开光遇试试应该就能进了。<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/58bf5575642c95df3cd4ba66931fb091.png" alt="" /><br />
<img src="https://s1.imagehub.cc/images/2025/01/15/0c0ea645b488ca4310724b42d55330cb.png" alt="" /><br />
<strong>感觉用鼠标玩的话特别难受，建议用手柄玩</strong></p>
<h2 id="处理器是-intel-的设备"><a class="markdownIt-Anchor" href="#处理器是-intel-的设备"></a> 处理器是 Intel 的设备</h2>
<p>请使用 Boot Camp 安装 Windows，安装前请先备份你的东西。<br />
然后在 <a href="https://sky.163.com/index.html">光遇官网</a> <a href="https://sky.163.com/index.html">https://sky.163.com/index.html</a> 下载光遇电脑版就可以了<br />
<img src="https://s1.imagehub.cc/images/2025/01/15/ef2e8a6ce4ecf5d1389c3a7d359f605d.png" alt="" /></p>
<h1 id="安装光-遇国际服tgc"><a class="markdownIt-Anchor" href="#安装光-遇国际服tgc"></a> 安装光 · 遇国际服（TGC）</h1>
<h2 id="处理器是-apple-m1-及以后的设备-2"><a class="markdownIt-Anchor" href="#处理器是-apple-m1-及以后的设备-2"></a> 处理器是 Apple M1 及以后的设备</h2>
<p>打开 App Store，退出登录国区账号（如果你现在登入的是外区账号请忽略）<br />
<img src="https://pic1.imgdb.cn/item/6787042bd0e0a243d4f45676.png" alt="" /><br />
登录外区账号<br />
<img src="https://pic1.imgdb.cn/item/6787049cd0e0a243d4f4567b.png" alt="" /><br />
在搜索框搜索“Sky”或光遇都可以，直接下载：<br />
<img src="https://pic1.imgdb.cn/item/678704e1d0e0a243d4f4567c.png" alt="" /></p>
<h2 id="处理器是-intel-的设备-2"><a class="markdownIt-Anchor" href="#处理器是-intel-的设备-2"></a> 处理器是 Intel 的设备</h2>
<p>请使用 Boot Camp 安装 Windows，安装前请先备份你的东西。<br />
然后安装 Steam，在 Steam 里安装光遇（请自行查找光遇 Steam 入库教程）：<br />
<img src="https://pic1.imgdb.cn/item/67870581d0e0a243d4f45681.png" alt="" /><br />
<strong>祝你在光 · 遇的世界里玩的开心！</strong></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>光！遇！</tag>
      </tags>
  </entry>
  <entry>
    <title>Sanapri bilibili 新视频</title>
    <url>/20220823/164646/</url>
    <content><![CDATA[<p>鎖那小天使终于发新视频啦，这里给你们看看～</p>
<pre><code>Kyu-kurarin (cover) / sana 
original: きゅうくらりん / いよわ feat.可不 
vocal: 鎖那  mix: n.k 
▷https://space.bilibili.com/543245410
</code></pre>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?bvid=BV1M14y1t7LK&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe>
</div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>黑翼猫 Extended Kernel Project 中国网络环境下载</title>
    <url>/20220818/010924/</url>
    <content><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2>
<p>众所周知，因为<font color=green>国内网络环境的特殊</font>，好多网站不能访问。黑翼猫大佬的博客也是如此，在国内访问会提示连接被重置。所以我翻墙后下载了黑翼猫 Windows 2000 Extended Kernel Project 和依赖的补丁集。(包括 wlupdate)</p>
<h2 id="教程"><a class="markdownIt-Anchor" href="#教程"></a> 教程</h2>
<p>关于黑翼猫的 Windows 2000 拓展补丁安装，可以参考这个文章…<a href="https://zhuanlan.zhihu.com/p/484014315">传送点！</a></p>
<h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2>
<p>下载链接：<a href="https://pan.huang1111.cn/s/4d34hg">点我下载</a></p>
<h2 id="产品密钥"><a class="markdownIt-Anchor" href="#产品密钥"></a> 产品密钥</h2>
<p><font color=red>PQHKR-G4JFW-VTY3P-G4WQ2-88CTW</font><br />
<img src="https://img.gejiba.com/images/179c2f93582f6652f270c41e07636539.png" alt="" /></p>
<h2 id="安装中"><a class="markdownIt-Anchor" href="#安装中"></a> 安装中…</h2>
<p><img src="https://img.gejiba.com/images/20975efcd5f8834d9a0f81dc7047c5e8.png" alt="" /><br />
<img src="https://img.gejiba.com/images/eb69053f5eab4d6b2cd8000e2c985296.png" alt="" /><br />
<img src="https://img.gejiba.com/images/ea1fa06f63547b60ecc660645cc5240e.png" alt="" /><br />
<img src="https://img.gejiba.com/images/1ecefcd2e46809e7174800d584b53e20.png" alt="" /></p>
<h2 id="伪装系统版本用的软件"><a class="markdownIt-Anchor" href="#伪装系统版本用的软件"></a> 伪装系统版本用的软件</h2>
<p><img src="https://img.gejiba.com/images/b269d479dbb9aab60c0bfcbac371d2ed.png" alt="" /></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
</search>
